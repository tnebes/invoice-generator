/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package invoiceGenerator.view.viewUtil;
import invoiceGenerator.controller.AddressHandler;
import invoiceGenerator.model.Address;
import invoiceGenerator.util.InvoiceGeneratorException;
import invoiceGenerator.view.MainMenu;

import javax.swing.*;

/**
 *
 * @author tnebes
 */
public class AddressPicker extends javax.swing.JFrame {

    private MainMenu mainMenu;
    private boolean addressType; // true billing, false shipping
    private boolean forCustomerCreation;
    private AddressHandler addressHandler;

    /**
     * Creates new form AddressPicker
     */
    public AddressPicker(MainMenu mainMenu, boolean addressType) {
        this.addressHandler = new AddressHandler();
        initComponents();
        initAddresses();
        this.mainMenu = mainMenu;
        this.addressType = addressType;
        this.forCustomerCreation = forCustomerCreation;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstAddressList = new javax.swing.JList<>();
        btnChoose = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        lstAddressList.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                lstAddressListComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(lstAddressList);

        btnChoose.setText("Choose");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnChoose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCancel)
                    .addComponent(btnChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        triggerAddressCollection();
    }//GEN-LAST:event_btnChooseActionPerformed


    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void lstAddressListComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lstAddressListComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_lstAddressListComponentShown

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChoose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Address> lstAddressList;
    // End of variables declaration//GEN-END:variables

    private void initAddresses() {
        DefaultListModel<Address> addresses = new DefaultListModel<>();
        try {
            addresses.addAll(addressHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstAddressList.setModel(addresses);
    }

    public Address returnChosenAddress() {
        Address selectedAddress = lstAddressList.getSelectedValue();
        return selectedAddress;
    }

    private void triggerAddressCollection() {
        Address newAddress = returnChosenAddress();
        if (newAddress != null) {
            // TODO address here
            this.dispose();
            return;
        }
        JOptionPane.showMessageDialog(rootPane, "No address selected.");
    }

    public interface AddressReturner {
        void run(Address address);
    }
    public void giveMeAddress(AddressReturner addressReturner) {
        btnChoose.addActionListener(e ->
            addressReturner.run(returnChosenAddress())
        );
    }

}
