/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package invoiceGenerator.view;

import invoiceGenerator.controller.*;
import invoiceGenerator.model.*;
import invoiceGenerator.util.HibernateUtil;
import invoiceGenerator.util.InvoiceGeneratorException;
import invoiceGenerator.view.viewUtil.AddressPicker;
import invoiceGenerator.view.viewUtil.ArticlePicker;
import invoiceGenerator.view.viewUtil.CustomerPicker;
import org.hibernate.Session;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 * @author tnebes
 */
public class MainMenu extends javax.swing.JFrame {

    InvoiceHandler invoiceHandler;
    CustomerHandler customerHandler;
    ArticleHandler articleHandler;
    AddressHandler addressHandler;
    ArticleInvoiceHandler articleInvoiceHandler;
    StatusHandler statusHandler;
    TransactionTypeHandler transactionTypeHandler;

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        this.invoiceHandler = new InvoiceHandler();
        this.customerHandler = new CustomerHandler();
        this.articleHandler = new ArticleHandler();
        this.addressHandler = new AddressHandler();
        this.articleInvoiceHandler = new ArticleInvoiceHandler();
        this.statusHandler = new StatusHandler();
        this.transactionTypeHandler = new TransactionTypeHandler();
        initComponents();
        setTitle(Application.APPLICATION_TITLE + " " + Application.operator.getFirstLastName());
        loadFromDatabase();
        new MyTime().start();
    }

    private void loadFromDatabase() {
        loadInvoices();
        loadAddresses();
        loadCustomers();
        loadArticles();
        loadOptionsStatusesTransactions();
    }

    private class MyTime extends Thread {

        private SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MMM dd YYYY HH:mm:ss '- week 'ww");

        @Override
        public void run() {
            while (true) {
                lblTimeLabel.setText(simpleDateFormat.format(new Date()));
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private boolean genericSaveCheck(String object) {
        return JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to save this " + object + "?",
                "Save Check",
                JOptionPane.YES_NO_OPTION) == 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        tabController = new javax.swing.JTabbedPane();
        jpRegisterTab = new javax.swing.JPanel();
        pnlRegister = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRegisterInvoice = new javax.swing.JTable();
        pnlRegisterInformationPanel = new javax.swing.JPanel();
        pnlRegisterCustomerInfo = new javax.swing.JPanel();
        lblRegisterCustomer = new javax.swing.JLabel();
        btnRegisterAddCustomer = new javax.swing.JButton();
        btnRegisterRemoveCustomer = new javax.swing.JButton();
        lblRegisterBillingAddress1 = new javax.swing.JLabel();
        btnRegisterAddShipping = new javax.swing.JButton();
        btnRegisterRemoveShipping = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtCustomerShippingInformation = new javax.swing.JTextArea();
        pnlRegisterArticle = new javax.swing.JPanel();
        lblRegisterArticle = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblRegisterQuantity = new javax.swing.JLabel();
        txtRegisterQuantity = new javax.swing.JTextField();
        lblRegisterDiscount = new javax.swing.JLabel();
        txtRegisterDiscount = new javax.swing.JTextField();
        txtRegisterSelectedArticle = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtRegisterArticleNote = new javax.swing.JTextArea();
        lblRegisterNote = new javax.swing.JLabel();
        btnRegisterAddArticle = new javax.swing.JButton();
        btnRegisterClearArticle = new javax.swing.JButton();
        btnRegisterRemoveArticle = new javax.swing.JButton();
        lblRegisterSubtotal = new javax.swing.JLabel();
        txtRegisterSubtotal = new javax.swing.JTextField();
        lblRegisterTax = new javax.swing.JLabel();
        txtRegisterTax = new javax.swing.JTextField();
        lblRegisterInvoiceTotal = new javax.swing.JLabel();
        txtRegisterInvoiceTotal = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        cmbRegisterTransactionType = new javax.swing.JComboBox<>();
        cmbRegisterStatus = new javax.swing.JComboBox<>();
        lblRegisterStatus = new javax.swing.JLabel();
        lblRegisterTransactionType = new javax.swing.JLabel();
        btnRegisterRemoveLastArticle = new javax.swing.JButton();
        btnIssueInvoice = new javax.swing.JButton();
        jpAccountingTab = new javax.swing.JPanel();
        tpAccounting = new javax.swing.JTabbedPane();
        addressPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jspArticleScrollPane1 = new javax.swing.JScrollPane();
        lstAddressList = new javax.swing.JList<>();
        lblAddressCustomerWAddress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAddressCustomerList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        btnAddressSave = new javax.swing.JButton();
        btnAddressRevert = new javax.swing.JButton();
        btnAddressClear = new javax.swing.JButton();
        btnAddressAdd = new javax.swing.JButton();
        btnAddressDelete = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        txtAddressCountry = new javax.swing.JTextField();
        lblAddressStreetNumber = new javax.swing.JLabel();
        lblAddressId = new javax.swing.JLabel();
        txtAddressStreetLetter = new javax.swing.JTextField();
        txtAddressId = new javax.swing.JTextField();
        lblAddressCity = new javax.swing.JLabel();
        txtAddressStreetNumber = new javax.swing.JTextField();
        lblAddressStreetLetter = new javax.swing.JLabel();
        lblAddressStreet = new javax.swing.JLabel();
        txtAddressCity = new javax.swing.JTextField();
        txtAddressStreet = new javax.swing.JTextField();
        lblAddressCountry = new javax.swing.JLabel();
        txtAddressZIP = new javax.swing.JTextField();
        lblAddressCity1 = new javax.swing.JLabel();
        cbAddressType = new javax.swing.JCheckBox();
        customerPanel = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        btnChangeCustomerBillingAddress = new javax.swing.JButton();
        btnChangeCustomerShippingAddress = new javax.swing.JButton();
        btnCustomerShippingAddress = new javax.swing.JButton();
        btnCustomerBillingAddress = new javax.swing.JButton();
        lblCustomerAddress = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        btnCustomerClear = new javax.swing.JButton();
        btnCustomerDeleteButton = new javax.swing.JButton();
        btnCustomerAddCustomer = new javax.swing.JButton();
        btnCustomerRevertButton = new javax.swing.JButton();
        btnCustomerSaveButton = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        txtCustomerNationalIDNumber = new javax.swing.JTextField();
        txtCustomerFirstName = new javax.swing.JTextField();
        lblFirstNameLabel = new javax.swing.JLabel();
        lblCustomerNationalIDNumberLabel = new javax.swing.JLabel();
        lblCustomerIDLabel = new javax.swing.JLabel();
        lblLastNameLabel = new javax.swing.JLabel();
        txtCustomerLastName = new javax.swing.JTextField();
        txtCustomerID = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        txtCustomerMiddleName = new javax.swing.JTextField();
        txtCustomerDateAdded = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        lblCustomerDateAddedLabel = new javax.swing.JLabel();
        lblMiddleNameLabel = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        lblCustomerTypeLabel = new javax.swing.JLabel();
        lblCustomerNameLabel = new javax.swing.JLabel();
        txtCustomerVATID = new javax.swing.JTextField();
        lblVATIDLabel = new javax.swing.JLabel();
        jcbCustomerTypeCheckBox = new javax.swing.JCheckBox();
        txtCustomerLegalName = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jspCustomerScrollPane = new javax.swing.JScrollPane();
        lstCustomerList = new javax.swing.JList<>();
        articlePanel = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        lblArticleShortDescriptionLabel4 = new javax.swing.JLabel();
        txtArticleWholesalePrice = new javax.swing.JTextField();
        lblArticleShortDescriptionLabel5 = new javax.swing.JLabel();
        txtArticleRetailPrice = new javax.swing.JTextField();
        lblArticleShortDescriptionLabel3 = new javax.swing.JLabel();
        lblArticleShortDescriptionLabel2 = new javax.swing.JLabel();
        txtArticleTaxRate = new javax.swing.JTextField();
        btnArticleCalculateCost = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        btnArticleSave = new javax.swing.JButton();
        btnArticleClear = new javax.swing.JButton();
        btnArticleAdd = new javax.swing.JButton();
        btnArticleDelete = new javax.swing.JButton();
        btnArticleRevert = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        txtArticleShortDescription = new javax.swing.JTextField();
        txtArticleID = new javax.swing.JTextField();
        txtArticleLongName = new javax.swing.JTextField();
        lblArticleWarehouseLocationLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArticleLongDescription = new javax.swing.JTextArea();
        txtArticleWarehouseQuantity = new javax.swing.JTextField();
        lblArticleShortNameLabel = new javax.swing.JLabel();
        lblArticleQuantityLabel = new javax.swing.JLabel();
        lblArticleShortDescriptionLabel = new javax.swing.JLabel();
        lblArticleLongNameLabel = new javax.swing.JLabel();
        lblArticleShortDescriptionLabel1 = new javax.swing.JLabel();
        txtArticleShortName = new javax.swing.JTextField();
        lblArticleIDLabel = new javax.swing.JLabel();
        txtArticleWarehouseLocation = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jspArticleScrollPane = new javax.swing.JScrollPane();
        lstArticleList = new javax.swing.JList<>();
        invoicePanel = new javax.swing.JPanel();
        pnlInvoices = new javax.swing.JPanel();
        pnlInvoiceFiltersPanel = new javax.swing.JPanel();
        lblInvoiceSearchFilter = new javax.swing.JLabel();
        cmbInvoiceStatusFilter = new javax.swing.JComboBox<>();
        cmbInvoiceTransactionFilter = new javax.swing.JComboBox<>();
        txtInvoiceSearchBar = new javax.swing.JTextField();
        btnInvoiceFilterSearch = new javax.swing.JButton();
        btnInvoiceClearSearchFilters = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        lstInvoiceList = new javax.swing.JList<>();
        pnlInvoiceArticleInvoiceInformation = new javax.swing.JPanel();
        pnlInvoiceArticleInformation = new javax.swing.JPanel();
        lblInvoiceArticleInformation = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        lstInvoiceArticle = new javax.swing.JList<>();
        jPanel7 = new javax.swing.JPanel();
        txtInvoiceArticleRetail = new javax.swing.JTextField();
        txtInvoiceArticleDate = new javax.swing.JTextField();
        txtInvoiceArticleTaxRate = new javax.swing.JTextField();
        lblInvoiceArticleWholesale = new javax.swing.JLabel();
        lblInvoiceArticleTaxRate = new javax.swing.JLabel();
        txtInvoiceArticleWholesale = new javax.swing.JTextField();
        txtInvoiceArticleDiscount = new javax.swing.JTextField();
        lblInvoiceArticleRetail = new javax.swing.JLabel();
        txtInvoiceArticleTotal = new javax.swing.JTextField();
        txtInvoiceArticleQuantity = new javax.swing.JTextField();
        lblInvoiceArticleTotal = new javax.swing.JLabel();
        lblInvoiceArticleDate = new javax.swing.JLabel();
        lblInvoiceArticleQuantity = new javax.swing.JLabel();
        lblInvoiceArticleDiscount = new javax.swing.JLabel();
        btnInvoiceRemoveArticle = new javax.swing.JButton();
        btnInvoiceSaveArticle = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtInvoiceArticleNote = new javax.swing.JTextArea();
        lblInvoiceArticleNote = new javax.swing.JLabel();
        pnlInvoiceInformation = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        btnInvoiceDeleteInvoice = new javax.swing.JButton();
        btnInvoiceSaveInvoice = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnInvoiceShippingChange = new javax.swing.JButton();
        cmbInvoiceTransaction = new javax.swing.JComboBox<>();
        cmbInvoiceStatus = new javax.swing.JComboBox<>();
        btnInvoiceCustomerChange = new javax.swing.JButton();
        lblInvoiceCustomer = new javax.swing.JLabel();
        lblInvoiceShipping = new javax.swing.JLabel();
        lblInvoiceStatus = new javax.swing.JLabel();
        lblInvoiceTransaction = new javax.swing.JLabel();
        btnInvoiceGotoShipping = new javax.swing.JButton();
        btnInvoiceGotoCustomer = new javax.swing.JButton();
        btnInvoiceRemoveCustomer = new javax.swing.JButton();
        btnInvoiceRemoveShipping = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        lblInvoiceInvoiceInformation = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtInvoiceAmountDue = new javax.swing.JTextField();
        lblInvoiceAmountDue = new javax.swing.JLabel();
        lblInvoiceSubtotal1 = new javax.swing.JLabel();
        lblInvoiceAmountPaid = new javax.swing.JLabel();
        txtInvoiceAmountPaid = new javax.swing.JTextField();
        lblInvoiceSubtotal = new javax.swing.JLabel();
        txtInvoiceTotal = new javax.swing.JTextField();
        txtInvoiceSubtotal = new javax.swing.JTextField();
        btnInvoicePaid = new javax.swing.JButton();
        jpOptionsTab = new javax.swing.JPanel();
        databasePanel = new javax.swing.JPanel();
        databaseLabel = new javax.swing.JLabel();
        purgeDatabaseButton = new javax.swing.JButton();
        pnlStatusPanel = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        cmbStatusChooser = new javax.swing.JComboBox<>();
        lblStatusName = new javax.swing.JLabel();
        lblStatusDescription = new javax.swing.JLabel();
        lblStatusLongDescription = new javax.swing.JLabel();
        txtStatusName = new javax.swing.JTextField();
        txtStatusDescription = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtStatusLongDescription = new javax.swing.JTextArea();
        btnStatusAdd = new javax.swing.JButton();
        btnStatusSave = new javax.swing.JButton();
        btnStatusRemove = new javax.swing.JButton();
        btnStatusClear = new javax.swing.JButton();
        pnlTransactionTypePanel = new javax.swing.JPanel();
        lblTransactionType = new javax.swing.JLabel();
        cmbTransactionTypeChooser = new javax.swing.JComboBox<>();
        lblTransactionTypeDescription = new javax.swing.JLabel();
        txtTransactionTypeName = new javax.swing.JTextField();
        lblTransactionTypeName = new javax.swing.JLabel();
        txtTransactionTypeDescription = new javax.swing.JTextField();
        btnTransactionTypeSave = new javax.swing.JButton();
        btnTransactionTypeRemove = new javax.swing.JButton();
        btnTransactionTypeAdd = new javax.swing.JButton();
        btnTransactionTypeClear = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        lblTimeLabel = new javax.swing.JLabel();
        jmbFileInfoBar = new javax.swing.JMenuBar();
        jmFile = new javax.swing.JMenu();
        jmiExitButton = new javax.swing.JMenuItem();
        jmInfo = new javax.swing.JMenu();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabController.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jpRegisterTab.setPreferredSize(new java.awt.Dimension(800, 500));
        jpRegisterTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpRegisterTabComponentShown(evt);
            }
        });

        tblRegisterInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Location", "Wholesale", "Tax", "Retail", "Discount", "Quantity", "Total"
            }
        ));
        tblRegisterInvoice.setEnabled(false);
        jScrollPane4.setViewportView(tblRegisterInvoice);

        pnlRegisterInformationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblRegisterCustomer.setText("Customer:");

        btnRegisterAddCustomer.setText("add");
        btnRegisterAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterAddCustomerActionPerformed(evt);
            }
        });

        btnRegisterRemoveCustomer.setText("remove");
        btnRegisterRemoveCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterRemoveCustomerActionPerformed(evt);
            }
        });

        lblRegisterBillingAddress1.setText("Shipping Address:");

        btnRegisterAddShipping.setText("add");
        btnRegisterAddShipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterAddShippingActionPerformed(evt);
            }
        });

        btnRegisterRemoveShipping.setText("remove");
        btnRegisterRemoveShipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterRemoveShippingActionPerformed(evt);
            }
        });

        txtCustomerShippingInformation.setEditable(false);
        txtCustomerShippingInformation.setColumns(20);
        txtCustomerShippingInformation.setLineWrap(true);
        txtCustomerShippingInformation.setRows(5);
        jScrollPane5.setViewportView(txtCustomerShippingInformation);

        javax.swing.GroupLayout pnlRegisterCustomerInfoLayout = new javax.swing.GroupLayout(pnlRegisterCustomerInfo);
        pnlRegisterCustomerInfo.setLayout(pnlRegisterCustomerInfoLayout);
        pnlRegisterCustomerInfoLayout.setHorizontalGroup(
            pnlRegisterCustomerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterCustomerInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegisterCustomerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(pnlRegisterCustomerInfoLayout.createSequentialGroup()
                        .addGroup(pnlRegisterCustomerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRegisterCustomerInfoLayout.createSequentialGroup()
                                .addComponent(btnRegisterAddCustomer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRegisterRemoveCustomer))
                            .addGroup(pnlRegisterCustomerInfoLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(lblRegisterCustomer)))
                        .addGroup(pnlRegisterCustomerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRegisterCustomerInfoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRegisterAddShipping)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegisterRemoveShipping))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegisterCustomerInfoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblRegisterBillingAddress1)
                                .addGap(21, 21, 21)))))
                .addContainerGap())
        );
        pnlRegisterCustomerInfoLayout.setVerticalGroup(
            pnlRegisterCustomerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterCustomerInfoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlRegisterCustomerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterCustomer)
                    .addComponent(lblRegisterBillingAddress1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegisterCustomerInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegisterAddCustomer)
                    .addComponent(btnRegisterRemoveCustomer)
                    .addComponent(btnRegisterAddShipping)
                    .addComponent(btnRegisterRemoveShipping))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblRegisterArticle.setText("Article:");

        jButton1.setText("select");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblRegisterQuantity.setText("Quantity:");

        txtRegisterQuantity.setText("1");

        lblRegisterDiscount.setText("Discount:");

        txtRegisterDiscount.setText("0");

        txtRegisterSelectedArticle.setEditable(false);
        txtRegisterSelectedArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegisterSelectedArticleActionPerformed(evt);
            }
        });

        txtRegisterArticleNote.setColumns(20);
        txtRegisterArticleNote.setLineWrap(true);
        txtRegisterArticleNote.setRows(5);
        jScrollPane3.setViewportView(txtRegisterArticleNote);

        lblRegisterNote.setText("Note:");

        btnRegisterAddArticle.setText("Add");
        btnRegisterAddArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterAddArticleActionPerformed(evt);
            }
        });

        btnRegisterClearArticle.setText("Clear");
        btnRegisterClearArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterClearArticleActionPerformed(evt);
            }
        });

        btnRegisterRemoveArticle.setText("Remove");
        btnRegisterRemoveArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterRemoveArticleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegisterArticleLayout = new javax.swing.GroupLayout(pnlRegisterArticle);
        pnlRegisterArticle.setLayout(pnlRegisterArticleLayout);
        pnlRegisterArticleLayout.setHorizontalGroup(
            pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterArticleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblRegisterNote)
                    .addComponent(btnRegisterAddArticle)
                    .addGroup(pnlRegisterArticleLayout.createSequentialGroup()
                        .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegisterArticleLayout.createSequentialGroup()
                                .addComponent(lblRegisterQuantity)
                                .addGap(18, 18, 18))
                            .addGroup(pnlRegisterArticleLayout.createSequentialGroup()
                                .addComponent(lblRegisterArticle)
                                .addGap(30, 30, 30)))
                        .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRegisterSelectedArticle)
                            .addComponent(txtRegisterQuantity)))
                    .addGroup(pnlRegisterArticleLayout.createSequentialGroup()
                        .addComponent(lblRegisterDiscount)
                        .addGap(18, 18, 18)
                        .addComponent(txtRegisterDiscount))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRegisterRemoveArticle, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(btnRegisterClearArticle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlRegisterArticleLayout.setVerticalGroup(
            pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterArticleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterArticle)
                    .addComponent(jButton1)
                    .addComponent(txtRegisterSelectedArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegisterQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegisterQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegisterDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegisterDiscount))
                .addGap(4, 4, 4)
                .addComponent(lblRegisterNote)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegisterArticleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegisterArticleLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegisterAddArticle))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegisterArticleLayout.createSequentialGroup()
                        .addComponent(btnRegisterClearArticle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegisterRemoveArticle)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlRegisterInformationPanelLayout = new javax.swing.GroupLayout(pnlRegisterInformationPanel);
        pnlRegisterInformationPanel.setLayout(pnlRegisterInformationPanelLayout);
        pnlRegisterInformationPanelLayout.setHorizontalGroup(
            pnlRegisterInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegisterCustomerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRegisterArticle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlRegisterInformationPanelLayout.setVerticalGroup(
            pnlRegisterInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegisterInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlRegisterArticle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlRegisterCustomerInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblRegisterSubtotal.setText("Subtotal");

        txtRegisterSubtotal.setEditable(false);

        lblRegisterTax.setText("Tax");

        txtRegisterTax.setEditable(false);

        lblRegisterInvoiceTotal.setText("Total");

        txtRegisterInvoiceTotal.setEditable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblRegisterStatus.setText("Status:");

        lblRegisterTransactionType.setText("Transaction:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbRegisterStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbRegisterTransactionType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRegisterStatus)
                            .addComponent(lblRegisterTransactionType))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegisterStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbRegisterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRegisterTransactionType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbRegisterTransactionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnRegisterRemoveLastArticle.setText("Remove last");
        btnRegisterRemoveLastArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterRemoveLastArticleActionPerformed(evt);
            }
        });

        btnIssueInvoice.setText("Issue invoice");
        btnIssueInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueInvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegisterLayout = new javax.swing.GroupLayout(pnlRegister);
        pnlRegister.setLayout(pnlRegisterLayout);
        pnlRegisterLayout.setHorizontalGroup(
            pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(pnlRegisterLayout.createSequentialGroup()
                        .addComponent(pnlRegisterInformationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegisterLayout.createSequentialGroup()
                        .addComponent(lblRegisterSubtotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRegisterSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRegisterTax)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRegisterTax, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(143, 143, 143)
                        .addComponent(btnIssueInvoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                        .addComponent(lblRegisterInvoiceTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRegisterInvoiceTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegisterRemoveLastArticle)))
                .addContainerGap())
        );
        pnlRegisterLayout.setVerticalGroup(
            pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegisterLayout.createSequentialGroup()
                .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlRegisterInformationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblRegisterSubtotal)
                        .addComponent(txtRegisterSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRegisterTax)
                        .addComponent(txtRegisterTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRegisterInvoiceTotal)
                        .addComponent(txtRegisterInvoiceTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRegisterRemoveLastArticle))
                    .addComponent(btnIssueInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jpRegisterTabLayout = new javax.swing.GroupLayout(jpRegisterTab);
        jpRegisterTab.setLayout(jpRegisterTabLayout);
        jpRegisterTabLayout.setHorizontalGroup(
            jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRegisterTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpRegisterTabLayout.setVerticalGroup(
            jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRegisterTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        tabController.addTab("Register", jpRegisterTab);

        addressPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                addressPanelComponentShown(evt);
            }
        });

        jPanel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lstAddressList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstAddressList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAddressListValueChanged(evt);
            }
        });
        jspArticleScrollPane1.setViewportView(lstAddressList);

        lblAddressCustomerWAddress.setText("Customer with selected address:");

        lstAddressCustomerList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstAddressCustomerListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstAddressCustomerList);

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspArticleScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(lblAddressCustomerWAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspArticleScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAddressCustomerWAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnAddressSave.setText("Save");
        btnAddressSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressSaveActionPerformed(evt);
            }
        });

        btnAddressRevert.setText("Revert");
        btnAddressRevert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressRevertActionPerformed(evt);
            }
        });

        btnAddressClear.setText("Clear");
        btnAddressClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressClearActionPerformed(evt);
            }
        });

        btnAddressAdd.setText("Add");
        btnAddressAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressAddActionPerformed(evt);
            }
        });

        btnAddressDelete.setText("Delete");
        btnAddressDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAddressSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddressAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(btnAddressRevert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddressClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddressDelete)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddressSave)
                    .addComponent(btnAddressAdd)
                    .addComponent(btnAddressRevert)
                    .addComponent(btnAddressClear)
                    .addComponent(btnAddressDelete)))
        );

        lblAddressStreetNumber.setText("Street number:");

        lblAddressId.setText("ID:");

        txtAddressId.setEditable(false);

        lblAddressCity.setText("City:");

        lblAddressStreetLetter.setText("Street letter:");

        lblAddressStreet.setText("Street:");

        lblAddressCountry.setText("Country:");

        lblAddressCity1.setText("ZIP:");

        cbAddressType.setText("Billing address?");
        cbAddressType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(cbAddressType, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(lblAddressStreetNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtAddressStreetNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddressCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAddressStreet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAddressId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAddressStreetLetter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAddressCity1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAddressCountry, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(177, 177, 177)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtAddressStreet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                                .addComponent(txtAddressStreetLetter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAddressId)
                                .addComponent(txtAddressZIP)
                                .addComponent(txtAddressCountry))
                            .addComponent(txtAddressCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbAddressType, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddressStreetNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressStreetNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressStreetLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressStreetLetter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAddressZIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addressPanelLayout = new javax.swing.GroupLayout(addressPanel);
        addressPanel.setLayout(addressPanelLayout);
        addressPanelLayout.setHorizontalGroup(
            addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        addressPanelLayout.setVerticalGroup(
            addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        tpAccounting.addTab("Addresses", addressPanel);

        customerPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                customerPanelComponentShown(evt);
            }
        });

        btnChangeCustomerBillingAddress.setText("Change / add");
        btnChangeCustomerBillingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeCustomerBillingAddressActionPerformed(evt);
            }
        });

        btnChangeCustomerShippingAddress.setText("Change / add");
        btnChangeCustomerShippingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeCustomerShippingAddressActionPerformed(evt);
            }
        });

        btnCustomerShippingAddress.setText("Shipping address");
        btnCustomerShippingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerShippingAddressActionPerformed(evt);
            }
        });

        btnCustomerBillingAddress.setText("Billing address");
        btnCustomerBillingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerBillingAddressActionPerformed(evt);
            }
        });

        lblCustomerAddress.setText("Address:");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCustomerAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnChangeCustomerBillingAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCustomerBillingAddress))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCustomerShippingAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChangeCustomerShippingAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCustomerBillingAddress)
                            .addComponent(btnCustomerShippingAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChangeCustomerBillingAddress)
                            .addComponent(btnChangeCustomerShippingAddress)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lblCustomerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCustomerClear.setText("Clear");
        btnCustomerClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerClearActionPerformed(evt);
            }
        });

        btnCustomerDeleteButton.setText("Delete");
        btnCustomerDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerDeleteButtonActionPerformed(evt);
            }
        });

        btnCustomerAddCustomer.setText("Add");
        btnCustomerAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerAddCustomerActionPerformed(evt);
            }
        });

        btnCustomerRevertButton.setText("Revert");
        btnCustomerRevertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerRevertButtonActionPerformed(evt);
            }
        });

        btnCustomerSaveButton.setText("Save");
        btnCustomerSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerSaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCustomerSaveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCustomerAddCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCustomerRevertButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCustomerClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCustomerDeleteButton)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCustomerSaveButton)
                    .addComponent(btnCustomerRevertButton)
                    .addComponent(btnCustomerClear)
                    .addComponent(btnCustomerAddCustomer)
                    .addComponent(btnCustomerDeleteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFirstNameLabel.setText("First name:");

        lblCustomerNationalIDNumberLabel.setText("National ID number:");

        lblCustomerIDLabel.setText("ID:");

        lblLastNameLabel.setText("Last Name:");
        lblLastNameLabel.setPreferredSize(null);

        txtCustomerID.setEditable(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCustomerIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCustomerNationalIDNumberLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFirstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCustomerLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(txtCustomerFirstName)
                    .addComponent(txtCustomerNationalIDNumber)
                    .addComponent(txtCustomerID))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerNationalIDNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerNationalIDNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        txtCustomerDateAdded.setEditable(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCustomerDateAdded, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(txtCustomerMiddleName))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(txtCustomerDateAdded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCustomerMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCustomerDateAddedLabel.setText("Date added:");

        lblMiddleNameLabel.setText("Middle Name:");
        lblMiddleNameLabel.setPreferredSize(null);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMiddleNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(lblCustomerDateAddedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(lblCustomerDateAddedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMiddleNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblCustomerTypeLabel.setText("Type:");
        lblCustomerTypeLabel.setPreferredSize(null);

        lblCustomerNameLabel.setText("Name:");
        lblCustomerNameLabel.setPreferredSize(null);

        lblVATIDLabel.setText("VAT ID");
        lblVATIDLabel.setPreferredSize(null);

        jcbCustomerTypeCheckBox.setText("Legal entity?");
        jcbCustomerTypeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCustomerTypeCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCustomerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addComponent(lblVATIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCustomerTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jcbCustomerTypeCheckBox))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(txtCustomerLegalName, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtCustomerVATID))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerLegalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVATIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCustomerVATID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCustomerTypeCheckBox))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lstCustomerList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCustomerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCustomerListValueChanged(evt);
            }
        });
        jspCustomerScrollPane.setViewportView(lstCustomerList);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspCustomerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspCustomerScrollPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 190, Short.MAX_VALUE)))
                .addContainerGap())
        );
        customerPanelLayout.setVerticalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, customerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, customerPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(86, 86, 86))
        );

        tpAccounting.addTab("Customers", customerPanel);

        articlePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                articlePanelComponentShown(evt);
            }
        });

        lblArticleShortDescriptionLabel4.setText("Wholesale price:");

        lblArticleShortDescriptionLabel5.setText("Retail price:");

        lblArticleShortDescriptionLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArticleShortDescriptionLabel3.setText("%");
        lblArticleShortDescriptionLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblArticleShortDescriptionLabel2.setText("Tax rate:");

        txtArticleTaxRate.setText("25");

        btnArticleCalculateCost.setText("Calculate");
        btnArticleCalculateCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleCalculateCostActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblArticleShortDescriptionLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblArticleShortDescriptionLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblArticleShortDescriptionLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtArticleRetailPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(txtArticleTaxRate)
                    .addComponent(txtArticleWholesalePrice, javax.swing.GroupLayout.Alignment.LEADING))
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblArticleShortDescriptionLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnArticleCalculateCost)
                        .addContainerGap())))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleShortDescriptionLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleTaxRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArticleShortDescriptionLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleShortDescriptionLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleWholesalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleShortDescriptionLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleRetailPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArticleCalculateCost))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnArticleSave.setText("Save");
        btnArticleSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleSaveActionPerformed(evt);
            }
        });

        btnArticleClear.setText("Clear");
        btnArticleClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleClearActionPerformed(evt);
            }
        });

        btnArticleAdd.setText("Add");
        btnArticleAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleAddActionPerformed(evt);
            }
        });

        btnArticleDelete.setText("Delete");
        btnArticleDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleDeleteActionPerformed(evt);
            }
        });

        btnArticleRevert.setText("Revert");
        btnArticleRevert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleRevertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnArticleSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArticleAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnArticleRevert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArticleClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArticleDelete)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArticleDelete)
                    .addComponent(btnArticleSave)
                    .addComponent(btnArticleRevert)
                    .addComponent(btnArticleAdd)
                    .addComponent(btnArticleClear))
                .addContainerGap())
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtArticleID.setEditable(false);

        lblArticleWarehouseLocationLabel.setText("Warehouse location:");

        txtArticleLongDescription.setColumns(20);
        txtArticleLongDescription.setRows(5);
        jScrollPane2.setViewportView(txtArticleLongDescription);

        lblArticleShortNameLabel.setText("Short name:");

        lblArticleQuantityLabel.setText("Quantity:");

        lblArticleShortDescriptionLabel.setText("Short Description:");

        lblArticleLongNameLabel.setText("Long name:");

        lblArticleShortDescriptionLabel1.setText("Long Description:");

        lblArticleIDLabel.setText("ID:");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(lblArticleShortDescriptionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblArticleQuantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblArticleIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtArticleID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtArticleWarehouseQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblArticleShortNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblArticleWarehouseLocationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtArticleShortName, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(txtArticleWarehouseLocation)))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(lblArticleLongNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(txtArticleLongName))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(lblArticleShortDescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtArticleShortDescription)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleIDLabel)
                    .addComponent(txtArticleID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArticleShortNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtArticleShortName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleQuantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleWarehouseQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArticleWarehouseLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleWarehouseLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleLongNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleLongName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleShortDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtArticleShortDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblArticleShortDescriptionLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        lstArticleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstArticleList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstArticleListValueChanged(evt);
            }
        });
        jspArticleScrollPane.setViewportView(lstArticleList);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspArticleScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspArticleScrollPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout articlePanelLayout = new javax.swing.GroupLayout(articlePanel);
        articlePanel.setLayout(articlePanelLayout);
        articlePanelLayout.setHorizontalGroup(
            articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        articlePanelLayout.setVerticalGroup(
            articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(119, 119, 119))
        );

        tpAccounting.addTab("Articles", articlePanel);

        invoicePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                invoicePanelComponentShown(evt);
            }
        });

        pnlInvoiceFiltersPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblInvoiceSearchFilter.setText("Filters");

        txtInvoiceSearchBar.setText("search...");

        btnInvoiceFilterSearch.setText("Search!");
        btnInvoiceFilterSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceFilterSearchActionPerformed(evt);
            }
        });

        btnInvoiceClearSearchFilters.setText("Clear");
        btnInvoiceClearSearchFilters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceClearSearchFiltersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInvoiceFiltersPanelLayout = new javax.swing.GroupLayout(pnlInvoiceFiltersPanel);
        pnlInvoiceFiltersPanel.setLayout(pnlInvoiceFiltersPanelLayout);
        pnlInvoiceFiltersPanelLayout.setHorizontalGroup(
            pnlInvoiceFiltersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceFiltersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInvoiceFiltersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbInvoiceTransactionFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbInvoiceStatusFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtInvoiceSearchBar, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addGroup(pnlInvoiceFiltersPanelLayout.createSequentialGroup()
                        .addComponent(lblInvoiceSearchFilter)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlInvoiceFiltersPanelLayout.createSequentialGroup()
                        .addComponent(btnInvoiceFilterSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnInvoiceClearSearchFilters)))
                .addContainerGap())
        );
        pnlInvoiceFiltersPanelLayout.setVerticalGroup(
            pnlInvoiceFiltersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceFiltersPanelLayout.createSequentialGroup()
                .addComponent(lblInvoiceSearchFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbInvoiceStatusFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbInvoiceTransactionFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtInvoiceSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInvoiceFiltersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInvoiceFilterSearch)
                    .addComponent(btnInvoiceClearSearchFilters))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lstInvoiceList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstInvoiceList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstInvoiceListValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(lstInvoiceList);

        javax.swing.GroupLayout pnlInvoicesLayout = new javax.swing.GroupLayout(pnlInvoices);
        pnlInvoices.setLayout(pnlInvoicesLayout);
        pnlInvoicesLayout.setHorizontalGroup(
            pnlInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoicesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInvoiceFiltersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlInvoicesLayout.setVerticalGroup(
            pnlInvoicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoicesLayout.createSequentialGroup()
                .addComponent(pnlInvoiceFiltersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlInvoiceArticleInformation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblInvoiceArticleInformation.setText("Article information");

        lstInvoiceArticle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstInvoiceArticle.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstInvoiceArticleValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(lstInvoiceArticle);

        txtInvoiceArticleRetail.setEditable(false);

        txtInvoiceArticleDate.setEditable(false);

        lblInvoiceArticleWholesale.setText("Wholesale:");

        lblInvoiceArticleTaxRate.setText("Tax rate:");

        txtInvoiceArticleWholesale.setEditable(false);

        lblInvoiceArticleRetail.setText("Retail:");

        txtInvoiceArticleTotal.setEditable(false);

        lblInvoiceArticleTotal.setText("Total:");

        lblInvoiceArticleDate.setText("Date:");

        lblInvoiceArticleQuantity.setText("Quantity:");

        lblInvoiceArticleDiscount.setText("Discount:");

        btnInvoiceRemoveArticle.setText("Remove");
        btnInvoiceRemoveArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceRemoveArticleActionPerformed(evt);
            }
        });

        btnInvoiceSaveArticle.setText("Save");
        btnInvoiceSaveArticle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceSaveArticleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblInvoiceArticleDiscount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblInvoiceArticleQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblInvoiceArticleRetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblInvoiceArticleTaxRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblInvoiceArticleWholesale, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                .addComponent(lblInvoiceArticleDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblInvoiceArticleTotal))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInvoiceArticleDate)
                            .addComponent(txtInvoiceArticleRetail)
                            .addComponent(txtInvoiceArticleTaxRate)
                            .addComponent(txtInvoiceArticleWholesale)
                            .addComponent(txtInvoiceArticleDiscount)
                            .addComponent(txtInvoiceArticleTotal)
                            .addComponent(txtInvoiceArticleQuantity)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btnInvoiceSaveArticle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addComponent(btnInvoiceRemoveArticle)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceArticleDate)
                    .addComponent(txtInvoiceArticleDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceArticleWholesale)
                    .addComponent(txtInvoiceArticleWholesale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceArticleTaxRate)
                    .addComponent(txtInvoiceArticleTaxRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceArticleRetail)
                    .addComponent(txtInvoiceArticleRetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceArticleQuantity)
                    .addComponent(txtInvoiceArticleQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceArticleDiscount)
                    .addComponent(txtInvoiceArticleDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInvoiceArticleTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtInvoiceArticleTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInvoiceSaveArticle)
                    .addComponent(btnInvoiceRemoveArticle))
                .addContainerGap())
        );

        txtInvoiceArticleNote.setColumns(20);
        txtInvoiceArticleNote.setLineWrap(true);
        txtInvoiceArticleNote.setRows(5);
        jScrollPane9.setViewportView(txtInvoiceArticleNote);

        lblInvoiceArticleNote.setText("Note:");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInvoiceArticleNote))
                .addGap(22, 22, 22))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInvoiceArticleNote)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlInvoiceArticleInformationLayout = new javax.swing.GroupLayout(pnlInvoiceArticleInformation);
        pnlInvoiceArticleInformation.setLayout(pnlInvoiceArticleInformationLayout);
        pnlInvoiceArticleInformationLayout.setHorizontalGroup(
            pnlInvoiceArticleInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceArticleInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInvoiceArticleInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblInvoiceArticleInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        pnlInvoiceArticleInformationLayout.setVerticalGroup(
            pnlInvoiceArticleInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceArticleInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInvoiceArticleInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInvoiceArticleInformationLayout.createSequentialGroup()
                        .addComponent(lblInvoiceArticleInformation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pnlInvoiceInformation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnInvoiceDeleteInvoice.setText("Delete");
        btnInvoiceDeleteInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceDeleteInvoiceActionPerformed(evt);
            }
        });

        btnInvoiceSaveInvoice.setText("Save");
        btnInvoiceSaveInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceSaveInvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnInvoiceSaveInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInvoiceDeleteInvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInvoiceSaveInvoice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInvoiceDeleteInvoice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnInvoiceShippingChange.setText("Change");
        btnInvoiceShippingChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceShippingChangeActionPerformed(evt);
            }
        });

        cmbInvoiceTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInvoiceTransactionActionPerformed(evt);
            }
        });

        btnInvoiceCustomerChange.setText("Change");
        btnInvoiceCustomerChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceCustomerChangeActionPerformed(evt);
            }
        });

        lblInvoiceCustomer.setText("Customer:");

        lblInvoiceShipping.setText("Shipping:");

        lblInvoiceStatus.setText("Status:");

        lblInvoiceTransaction.setText("Transaction:");

        btnInvoiceGotoShipping.setText("Goto");
        btnInvoiceGotoShipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceGotoShippingActionPerformed(evt);
            }
        });

        btnInvoiceGotoCustomer.setText("Goto");
        btnInvoiceGotoCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceGotoCustomerActionPerformed(evt);
            }
        });

        btnInvoiceRemoveCustomer.setText("Remove");
        btnInvoiceRemoveCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceRemoveCustomerActionPerformed(evt);
            }
        });

        btnInvoiceRemoveShipping.setText("Remove");
        btnInvoiceRemoveShipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoiceRemoveShippingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblInvoiceStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblInvoiceShipping))
                            .addGap(14, 14, 14))
                        .addComponent(lblInvoiceTransaction))
                    .addComponent(lblInvoiceCustomer))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cmbInvoiceTransaction, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbInvoiceStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnInvoiceGotoCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInvoiceGotoShipping))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnInvoiceShippingChange)
                            .addComponent(btnInvoiceCustomerChange, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInvoiceRemoveCustomer)
                    .addComponent(btnInvoiceRemoveShipping))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceCustomer)
                    .addComponent(btnInvoiceGotoCustomer)
                    .addComponent(btnInvoiceCustomerChange)
                    .addComponent(btnInvoiceRemoveCustomer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceShipping)
                    .addComponent(btnInvoiceGotoShipping)
                    .addComponent(btnInvoiceShippingChange)
                    .addComponent(btnInvoiceRemoveShipping))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceStatus)
                    .addComponent(cmbInvoiceStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceTransaction)
                    .addComponent(cmbInvoiceTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        lblInvoiceInvoiceInformation.setText("Invoice information");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInvoiceInvoiceInformation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInvoiceInvoiceInformation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtInvoiceAmountDue.setEditable(false);

        lblInvoiceAmountDue.setText("Due:");

        lblInvoiceSubtotal1.setText("Total:");

        lblInvoiceAmountPaid.setText("Paid:");

        lblInvoiceSubtotal.setText("Subtotal:");

        txtInvoiceTotal.setEditable(false);

        txtInvoiceSubtotal.setEditable(false);

        btnInvoicePaid.setText("paid");
        btnInvoicePaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvoicePaidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblInvoiceAmountDue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblInvoiceAmountPaid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblInvoiceSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInvoiceAmountDue)
                    .addComponent(txtInvoiceAmountPaid)
                    .addComponent(txtInvoiceSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblInvoiceSubtotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInvoicePaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtInvoiceTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceAmountDue)
                    .addComponent(txtInvoiceAmountDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceAmountPaid)
                    .addComponent(txtInvoiceAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInvoicePaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInvoiceSubtotal)
                    .addComponent(txtInvoiceSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInvoiceSubtotal1)
                    .addComponent(txtInvoiceTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlInvoiceInformationLayout = new javax.swing.GroupLayout(pnlInvoiceInformation);
        pnlInvoiceInformation.setLayout(pnlInvoiceInformationLayout);
        pnlInvoiceInformationLayout.setHorizontalGroup(
            pnlInvoiceInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlInvoiceInformationLayout.setVerticalGroup(
            pnlInvoiceInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInvoiceInformationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInvoiceInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout pnlInvoiceArticleInvoiceInformationLayout = new javax.swing.GroupLayout(pnlInvoiceArticleInvoiceInformation);
        pnlInvoiceArticleInvoiceInformation.setLayout(pnlInvoiceArticleInvoiceInformationLayout);
        pnlInvoiceArticleInvoiceInformationLayout.setHorizontalGroup(
            pnlInvoiceArticleInvoiceInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlInvoiceArticleInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlInvoiceInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlInvoiceArticleInvoiceInformationLayout.setVerticalGroup(
            pnlInvoiceArticleInvoiceInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInvoiceArticleInvoiceInformationLayout.createSequentialGroup()
                .addComponent(pnlInvoiceArticleInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInvoiceInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout invoicePanelLayout = new javax.swing.GroupLayout(invoicePanel);
        invoicePanel.setLayout(invoicePanelLayout);
        invoicePanelLayout.setHorizontalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInvoices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInvoiceArticleInvoiceInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        invoicePanelLayout.setVerticalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInvoices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlInvoiceArticleInvoiceInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        tpAccounting.addTab("Invoices", invoicePanel);

        javax.swing.GroupLayout jpAccountingTabLayout = new javax.swing.GroupLayout(jpAccountingTab);
        jpAccountingTab.setLayout(jpAccountingTabLayout);
        jpAccountingTabLayout.setHorizontalGroup(
            jpAccountingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpAccounting, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jpAccountingTabLayout.setVerticalGroup(
            jpAccountingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAccountingTabLayout.createSequentialGroup()
                .addComponent(tpAccounting, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        tabController.addTab("Accounting", jpAccountingTab);

        jpOptionsTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jpOptionsTabComponentShown(evt);
            }
        });

        databasePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        databasePanel.setPreferredSize(new java.awt.Dimension(250, 250));

        databaseLabel.setText("Database");

        purgeDatabaseButton.setText("Purge database");
        purgeDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purgeDatabaseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout databasePanelLayout = new javax.swing.GroupLayout(databasePanel);
        databasePanel.setLayout(databasePanelLayout);
        databasePanelLayout.setHorizontalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(databaseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addGroup(databasePanelLayout.createSequentialGroup()
                        .addComponent(purgeDatabaseButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        databasePanelLayout.setVerticalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(databaseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(purgeDatabaseButton)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        pnlStatusPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlStatusPanel.setPreferredSize(new java.awt.Dimension(250, 250));

        lblStatus.setText("Status");

        cmbStatusChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusChooserActionPerformed(evt);
            }
        });

        lblStatusName.setText("Name");

        lblStatusDescription.setText("Description");

        lblStatusLongDescription.setText("Long Description");

        txtStatusDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusDescriptionActionPerformed(evt);
            }
        });

        txtStatusLongDescription.setColumns(20);
        txtStatusLongDescription.setLineWrap(true);
        txtStatusLongDescription.setRows(5);
        jScrollPane6.setViewportView(txtStatusLongDescription);

        btnStatusAdd.setText("add");
        btnStatusAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusAddActionPerformed(evt);
            }
        });

        btnStatusSave.setText("save");
        btnStatusSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusSaveActionPerformed(evt);
            }
        });

        btnStatusRemove.setText("remove");
        btnStatusRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusRemoveActionPerformed(evt);
            }
        });

        btnStatusClear.setText("clear");
        btnStatusClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatusClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStatusPanelLayout = new javax.swing.GroupLayout(pnlStatusPanel);
        pnlStatusPanel.setLayout(pnlStatusPanelLayout);
        pnlStatusPanelLayout.setHorizontalGroup(
            pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStatusDescription)
                    .addGroup(pnlStatusPanelLayout.createSequentialGroup()
                        .addComponent(lblStatus)
                        .addGap(18, 18, 18)
                        .addComponent(cmbStatusChooser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlStatusPanelLayout.createSequentialGroup()
                        .addComponent(lblStatusName)
                        .addGap(18, 18, 18)
                        .addComponent(txtStatusName))
                    .addGroup(pnlStatusPanelLayout.createSequentialGroup()
                        .addGroup(pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStatusDescription)
                            .addComponent(lblStatusLongDescription)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlStatusPanelLayout.createSequentialGroup()
                                .addComponent(btnStatusAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnStatusSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnStatusClear)
                                    .addComponent(btnStatusRemove))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlStatusPanelLayout.setVerticalGroup(
            pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbStatusChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatus))
                .addGap(18, 18, 18)
                .addGroup(pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatusName)
                    .addComponent(txtStatusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblStatusDescription)
                .addGap(5, 5, 5)
                .addComponent(txtStatusDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblStatusLongDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btnStatusClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStatusAdd)
                    .addComponent(btnStatusSave)
                    .addComponent(btnStatusRemove))
                .addContainerGap())
        );

        pnlTransactionTypePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlTransactionTypePanel.setPreferredSize(new java.awt.Dimension(250, 250));

        lblTransactionType.setText("Transaction Type");

        cmbTransactionTypeChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTransactionTypeChooserActionPerformed(evt);
            }
        });

        lblTransactionTypeDescription.setText("Description");

        lblTransactionTypeName.setText("Name");

        txtTransactionTypeDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTransactionTypeDescriptionActionPerformed(evt);
            }
        });

        btnTransactionTypeSave.setText("save");
        btnTransactionTypeSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionTypeSaveActionPerformed(evt);
            }
        });

        btnTransactionTypeRemove.setText("remove");
        btnTransactionTypeRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionTypeRemoveActionPerformed(evt);
            }
        });

        btnTransactionTypeAdd.setText("add");
        btnTransactionTypeAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionTypeAddActionPerformed(evt);
            }
        });

        btnTransactionTypeClear.setText("clear");
        btnTransactionTypeClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionTypeClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTransactionTypePanelLayout = new javax.swing.GroupLayout(pnlTransactionTypePanel);
        pnlTransactionTypePanel.setLayout(pnlTransactionTypePanelLayout);
        pnlTransactionTypePanelLayout.setHorizontalGroup(
            pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTransactionTypePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTransactionTypePanelLayout.createSequentialGroup()
                        .addComponent(lblTransactionType)
                        .addGap(18, 18, 18)
                        .addComponent(cmbTransactionTypeChooser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTransactionTypePanelLayout.createSequentialGroup()
                        .addComponent(lblTransactionTypeName)
                        .addGap(18, 18, 18)
                        .addComponent(txtTransactionTypeName))
                    .addComponent(txtTransactionTypeDescription)
                    .addGroup(pnlTransactionTypePanelLayout.createSequentialGroup()
                        .addGroup(pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnTransactionTypeClear)
                            .addGroup(pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblTransactionTypeDescription)
                                .addGroup(pnlTransactionTypePanelLayout.createSequentialGroup()
                                    .addComponent(btnTransactionTypeAdd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnTransactionTypeSave)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnTransactionTypeRemove))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlTransactionTypePanelLayout.setVerticalGroup(
            pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTransactionTypePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTransactionType)
                    .addComponent(cmbTransactionTypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTransactionTypeName)
                    .addComponent(txtTransactionTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblTransactionTypeDescription)
                .addGap(5, 5, 5)
                .addComponent(txtTransactionTypeDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addComponent(btnTransactionTypeClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTransactionTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTransactionTypeAdd)
                    .addComponent(btnTransactionTypeSave)
                    .addComponent(btnTransactionTypeRemove))
                .addContainerGap())
        );

        javax.swing.GroupLayout jpOptionsTabLayout = new javax.swing.GroupLayout(jpOptionsTab);
        jpOptionsTab.setLayout(jpOptionsTabLayout);
        jpOptionsTabLayout.setHorizontalGroup(
            jpOptionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOptionsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(databasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTransactionTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(409, Short.MAX_VALUE))
        );
        jpOptionsTabLayout.setVerticalGroup(
            jpOptionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOptionsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpOptionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTransactionTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(databasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(161, Short.MAX_VALUE))
        );

        tabController.addTab("Options", jpOptionsTab);

        jToolBar1.setRollover(true);

        lblTimeLabel.setText("time");
        jToolBar1.add(lblTimeLabel);

        jmFile.setText("File");

        jmiExitButton.setText("Exit");
        jmiExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitButtonActionPerformed(evt);
            }
        });
        jmFile.add(jmiExitButton);

        jmbFileInfoBar.add(jmFile);

        jmInfo.setText("Info");
        jmInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmInfoMouseClicked(evt);
            }
        });
        jmbFileInfoBar.add(jmInfo);

        setJMenuBar(jmbFileInfoBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabController)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabController, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void purgeDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purgeDatabaseButtonActionPerformed
        purgeDatabase();
    }//GEN-LAST:event_purgeDatabaseButtonActionPerformed

    private void jmInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmInfoMouseClicked
        Date date = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY");
        JOptionPane.showMessageDialog(rootPane, "This program has been made by Tomislav Nebes.\n2020 - " + simpleDateFormat.format(date));
    }//GEN-LAST:event_jmInfoMouseClicked

    private boolean somethingSelectedInList(Object selectedValue) {
        return selectedValue != null;
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        getNewRegisterArticle();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtRegisterSelectedArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegisterSelectedArticleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegisterSelectedArticleActionPerformed

    private void btnRegisterAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterAddCustomerActionPerformed
        getNewRegisterCustomer();
    }//GEN-LAST:event_btnRegisterAddCustomerActionPerformed

    private void btnRegisterRemoveCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterRemoveCustomerActionPerformed
        removeRegisterCustomer();
    }//GEN-LAST:event_btnRegisterRemoveCustomerActionPerformed

    private void btnRegisterAddShippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterAddShippingActionPerformed
        getNewRegisterShippingAddress();
    }//GEN-LAST:event_btnRegisterAddShippingActionPerformed

    private void btnRegisterRemoveShippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterRemoveShippingActionPerformed
        removeRegisterShippingAddress();
    }//GEN-LAST:event_btnRegisterRemoveShippingActionPerformed

    private void btnRegisterRemoveArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterRemoveArticleActionPerformed
        removeRegisterArticle();
    }//GEN-LAST:event_btnRegisterRemoveArticleActionPerformed

    private void btnRegisterClearArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterClearArticleActionPerformed
        clearRegisterArticleInformation();
    }//GEN-LAST:event_btnRegisterClearArticleActionPerformed

    private void btnRegisterAddArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterAddArticleActionPerformed
        if (registerArticle == null) {
            JOptionPane.showMessageDialog(rootPane, "No article selected.");
            return;
        }
        addArticleToInvoice(registerArticle);
        removeRegisterArticle();
    }//GEN-LAST:event_btnRegisterAddArticleActionPerformed

    private void btnIssueInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIssueInvoiceActionPerformed
        try {
            issueInvoice();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnIssueInvoiceActionPerformed

    private void jmiExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitButtonActionPerformed
        System.exit(1);
    }//GEN-LAST:event_jmiExitButtonActionPerformed

    private void txtStatusDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStatusDescriptionActionPerformed

    private void txtTransactionTypeDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTransactionTypeDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTransactionTypeDescriptionActionPerformed

    private void jpOptionsTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpOptionsTabComponentShown
        loadOptionsStatusesTransactions();
    }//GEN-LAST:event_jpOptionsTabComponentShown

    private void cmbStatusChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusChooserActionPerformed
        loadOptionsStatusInfo();
    }//GEN-LAST:event_cmbStatusChooserActionPerformed

    private void btnStatusClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusClearActionPerformed
        clearOptionsStatusInfo();
    }//GEN-LAST:event_btnStatusClearActionPerformed

    private void btnStatusAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusAddActionPerformed
        addOptionsStatus(collectStatusInformation());
    }//GEN-LAST:event_btnStatusAddActionPerformed

    private void btnStatusSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusSaveActionPerformed
        triggerStatusSave();
    }//GEN-LAST:event_btnStatusSaveActionPerformed

    private void btnStatusRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatusRemoveActionPerformed
        triggerStatusRemoval();
    }//GEN-LAST:event_btnStatusRemoveActionPerformed

    private void btnTransactionTypeAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionTypeAddActionPerformed
        addOptionsTransactionType(collectTransactionTypeInformation());
    }//GEN-LAST:event_btnTransactionTypeAddActionPerformed

    private void btnTransactionTypeSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionTypeSaveActionPerformed
        triggerTransactionTypeSave();
    }//GEN-LAST:event_btnTransactionTypeSaveActionPerformed

    private void btnTransactionTypeRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionTypeRemoveActionPerformed
        triggerTransactionTypeRemoval();
    }//GEN-LAST:event_btnTransactionTypeRemoveActionPerformed

    private void btnTransactionTypeClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionTypeClearActionPerformed
        clearOptionsTransactionTypesInfo();
    }//GEN-LAST:event_btnTransactionTypeClearActionPerformed

    private void cmbTransactionTypeChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTransactionTypeChooserActionPerformed
        loadOptionsTransactionTypesInfo();
    }//GEN-LAST:event_cmbTransactionTypeChooserActionPerformed

    private void jpRegisterTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jpRegisterTabComponentShown
        populateRegisterStatusesTransactions();
    }//GEN-LAST:event_jpRegisterTabComponentShown

    private void btnRegisterRemoveLastArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterRemoveLastArticleActionPerformed
        if (registerArticleInvoices.isEmpty()) {
            return;
        }
        registerArticleInvoices.remove(registerArticleInvoices.size() - 1);
        removeLastRowRegisterTable();
        updateRegisterTextBoxes();
    }//GEN-LAST:event_btnRegisterRemoveLastArticleActionPerformed

    private void invoicePanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_invoicePanelComponentShown
        loadInvoices();
        loadInvoiceStatusesTransactions();
    }//GEN-LAST:event_invoicePanelComponentShown

    private void btnInvoicePaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoicePaidActionPerformed
        if (lstInvoiceList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        setInvoiceAsPaid(lstInvoiceList.getSelectedValue());
        JOptionPane.showMessageDialog(rootPane, "Invoice set as paid!");
    }//GEN-LAST:event_btnInvoicePaidActionPerformed

    private void btnInvoiceGotoCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceGotoCustomerActionPerformed
        if (lstInvoiceList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        if (lstInvoiceList.getSelectedValue().getCustomer() == null) {
            JOptionPane.showMessageDialog(rootPane, "Invoice has no customer assigned.");
            return;
        }
        gotoCustomer(lstInvoiceList.getSelectedValue().getCustomer());
    }//GEN-LAST:event_btnInvoiceGotoCustomerActionPerformed

    private void btnInvoiceGotoShippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceGotoShippingActionPerformed
        if (lstInvoiceList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        if (lstInvoiceList.getSelectedValue().getShippingAddress()== null) {
            JOptionPane.showMessageDialog(rootPane, "Invoice has no shipping address assigned.");
            return;
        }
        gotoAddress(lstInvoiceList.getSelectedValue().getShippingAddress());
    }//GEN-LAST:event_btnInvoiceGotoShippingActionPerformed

    private void cmbInvoiceTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInvoiceTransactionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbInvoiceTransactionActionPerformed

    private void btnInvoiceDeleteInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceDeleteInvoiceActionPerformed
        Invoice invoice = lstInvoiceList.getSelectedValue();
        if (invoice == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        deleteInvoice(invoice);
    }//GEN-LAST:event_btnInvoiceDeleteInvoiceActionPerformed

    private void btnInvoiceSaveInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceSaveInvoiceActionPerformed
        Invoice invoice = lstInvoiceList.getSelectedValue();
        if (invoice == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        saveInvoice(invoice, true);
    }//GEN-LAST:event_btnInvoiceSaveInvoiceActionPerformed

    private void btnInvoiceSaveArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceSaveArticleActionPerformed
        if (lstInvoiceArticle.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "An article must be selected.");
            return;
        }
        saveArticleInvoice(lstInvoiceArticle.getSelectedValue());
    }//GEN-LAST:event_btnInvoiceSaveArticleActionPerformed

    private void btnInvoiceRemoveArticleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceRemoveArticleActionPerformed
        ArticleInvoice articleInvoice = lstInvoiceArticle.getSelectedValue();
        if (articleInvoice == null) {
            JOptionPane.showMessageDialog(rootPane, "No article in invoice selected.");
            return;
        }
        deleteArticleInvoiceUpdate(articleInvoice);
    }//GEN-LAST:event_btnInvoiceRemoveArticleActionPerformed

    private void lstInvoiceArticleValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstInvoiceArticleValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        ArticleInvoice articleInvoice = lstInvoiceArticle.getSelectedValue();
        if (articleInvoice == null) {
            return;
        }
        updateInvoiceArticleInformation(articleInvoice);
    }//GEN-LAST:event_lstInvoiceArticleValueChanged

    private void lstInvoiceListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstInvoiceListValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        Invoice invoice = lstInvoiceList.getSelectedValue();
        if (invoice == null) {
            return;
        }
        showInvoiceInformation(invoice);
        updateInvoiceArticles(invoice);
        refreshInvoiceArticleInformation();
    }//GEN-LAST:event_lstInvoiceListValueChanged

    private void btnInvoiceClearSearchFiltersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceClearSearchFiltersActionPerformed
        resetInvoiceSearchFilters();
    }//GEN-LAST:event_btnInvoiceClearSearchFiltersActionPerformed

    private void btnInvoiceFilterSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceFilterSearchActionPerformed
        invoiceSearchDecider();
    }//GEN-LAST:event_btnInvoiceFilterSearchActionPerformed

    private void articlePanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_articlePanelComponentShown
        loadArticles();
    }//GEN-LAST:event_articlePanelComponentShown

    private void lstArticleListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstArticleListValueChanged
        // avoids null values
        if (evt.getValueIsAdjusting()) {
            return;
        }

        Article article = lstArticleList.getSelectedValue();
        if (article == null) {
            return;
        }

        updateArticleInformation(article);
    }//GEN-LAST:event_lstArticleListValueChanged

    private void btnArticleRevertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleRevertActionPerformed
        if (!somethingSelectedInList(lstArticleList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
            "Are you sure you wish to revert changes made to this article?",
            "Revert Check",
            JOptionPane.YES_NO_OPTION) == 0) {
        Article article = lstArticleList.getSelectedValue();
        if (article == null) {
            return;
        }
        updateArticleInformation(article);
        }
    }//GEN-LAST:event_btnArticleRevertActionPerformed

    private void btnArticleDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleDeleteActionPerformed
        deleteArticle();
    }//GEN-LAST:event_btnArticleDeleteActionPerformed

    private void btnArticleAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleAddActionPerformed
        saveNewArticle();
    }//GEN-LAST:event_btnArticleAddActionPerformed

    private void btnArticleClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleClearActionPerformed
        clearArticleInformation();
        lstArticleList.clearSelection();
    }//GEN-LAST:event_btnArticleClearActionPerformed

    private void btnArticleSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleSaveActionPerformed
        if (!somethingSelectedInList(lstArticleList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
            "Are you sure you wish to make changes to this article?",
            "Save Check",
            JOptionPane.YES_NO_OPTION) == 0) {
        Article article = lstArticleList.getSelectedValue();
        updateArticle(article);
        }
    }//GEN-LAST:event_btnArticleSaveActionPerformed

    private void btnArticleCalculateCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleCalculateCostActionPerformed
        calculateArticlePriceDetails();
    }//GEN-LAST:event_btnArticleCalculateCostActionPerformed

    private void customerPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_customerPanelComponentShown
        loadCustomers();
    }//GEN-LAST:event_customerPanelComponentShown

    private void jcbCustomerTypeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCustomerTypeCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCustomerTypeCheckBoxActionPerformed

    private void btnCustomerSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerSaveButtonActionPerformed
        if (!somethingSelectedInList(lstCustomerList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
            "Are you sure you wish to make changes to this customer?",
            "Save Check",
            JOptionPane.YES_NO_OPTION) == 0) {
        Customer customer = lstCustomerList.getSelectedValue();
        updateCustomer(customer);
        }
    }//GEN-LAST:event_btnCustomerSaveButtonActionPerformed

    private void btnCustomerRevertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerRevertButtonActionPerformed
        if (!somethingSelectedInList(lstCustomerList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
            "Are you sure you wish to revert changes made to this customer?",
            "Revert Check",
            JOptionPane.YES_NO_OPTION) == 0) {
        Customer customer = lstCustomerList.getSelectedValue();
        if (customer == null) {
            return;
        }
        updateCustomerInformation(customer);
        }
    }//GEN-LAST:event_btnCustomerRevertButtonActionPerformed

    private void btnCustomerAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerAddCustomerActionPerformed
        saveNewCustomer();
    }//GEN-LAST:event_btnCustomerAddCustomerActionPerformed

    private void btnCustomerDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerDeleteButtonActionPerformed
        if (!somethingSelectedInList(lstCustomerList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
            "Are you sure you wish to delete this customer?",
            "Save Check",
            JOptionPane.YES_NO_OPTION) == 0) {
        Customer customer = lstCustomerList.getSelectedValue();
        deleteCustomer(customer);
        loadCustomers();
        clearCustomerInformation();
        }
    }//GEN-LAST:event_btnCustomerDeleteButtonActionPerformed

    private void btnCustomerClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerClearActionPerformed
        clearCustomerInformation();
    }//GEN-LAST:event_btnCustomerClearActionPerformed

    private void btnCustomerBillingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerBillingAddressActionPerformed
        Customer customer = lstCustomerList.getSelectedValue();
        if (customer == null) {
            JOptionPane.showInternalMessageDialog(null, "No customer selected.");
            return;
        }
        if (customer.getBillingAddress() == null) {
            JOptionPane.showInternalMessageDialog(null, "Customer has no billing address.");
            return;
        }
        try {
            //Address address = new CustomerHandler(customer).getBillingAddressOfCustomer();
            customerHandler.setEntity(customer);
            Address address = customerHandler.getBillingAddressOfCustomer();
            gotoAddress(address);
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnCustomerBillingAddressActionPerformed

    private void btnCustomerShippingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerShippingAddressActionPerformed
        Customer customer = lstCustomerList.getSelectedValue();
        if (customer == null) {
            JOptionPane.showInternalMessageDialog(null, "No customer selected.");
            return;
        }
        if (customer.getShippingAddress() == null) {
            JOptionPane.showInternalMessageDialog(null, "Customer has no shipping address.");
            return;
        }
        try {
            // Address address = new CustomerHandler(customer).getShippingAddressOfCustomer();
            customerHandler.setEntity(customer);
            Address address = customerHandler.getShippingAddressOfCustomer();
            gotoAddress(address);
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCustomerShippingAddressActionPerformed

    private void btnChangeCustomerShippingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeCustomerShippingAddressActionPerformed
        if (lstCustomerList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "No customer selected.");
            return;
        }
        customerChangeAddAddress(false); // shipping
    }//GEN-LAST:event_btnChangeCustomerShippingAddressActionPerformed

    private void btnChangeCustomerBillingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeCustomerBillingAddressActionPerformed
        if (lstCustomerList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "No customer selected.");
            return;
        }
        customerChangeAddAddress(true); // billing
    }//GEN-LAST:event_btnChangeCustomerBillingAddressActionPerformed

    private void lstCustomerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCustomerListValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        Customer customer = lstCustomerList.getSelectedValue();
        if (customer == null) {
            return;
        }
        updateCustomerInformation(customer);
    }//GEN-LAST:event_lstCustomerListValueChanged

    private void addressPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_addressPanelComponentShown
        loadAddresses();
    }//GEN-LAST:event_addressPanelComponentShown

    private void lstAddressCustomerListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstAddressCustomerListMouseClicked
        if (evt.getClickCount() == 2) {
            gotoCustomer(lstAddressCustomerList.getSelectedValue());
        }
    }//GEN-LAST:event_lstAddressCustomerListMouseClicked

    private void lstAddressListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAddressListValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        Address address = lstAddressList.getSelectedValue();
        if (address == null) {
            return;
        }

        updateAddressInformation(address);
    }//GEN-LAST:event_lstAddressListValueChanged

    private void btnAddressDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressDeleteActionPerformed
        if (!somethingSelectedInList(lstAddressList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
            "Are you sure you wish to delete this address?",
            "Save Check",
            JOptionPane.YES_NO_OPTION) == 0) {
        Address address = lstAddressList.getSelectedValue();
        deleteAddress(address);
        }
    }//GEN-LAST:event_btnAddressDeleteActionPerformed

    private void btnAddressAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressAddActionPerformed
        saveNewAddress();
    }//GEN-LAST:event_btnAddressAddActionPerformed

    private void btnAddressClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressClearActionPerformed
        clearAddressInformation();
        lstAddressList.clearSelection();
    }//GEN-LAST:event_btnAddressClearActionPerformed

    private void btnAddressRevertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressRevertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddressRevertActionPerformed

    private void btnAddressSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressSaveActionPerformed
        if (!somethingSelectedInList(lstAddressList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
            "Are you sure you wish to make changes to this address?",
            "Save Check",
            JOptionPane.YES_NO_OPTION) == 0) {
        Address address = lstAddressList.getSelectedValue();
        updateAddress(address);
        }
    }//GEN-LAST:event_btnAddressSaveActionPerformed

    private void btnInvoiceCustomerChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceCustomerChangeActionPerformed
        Invoice invoice = lstInvoiceList.getSelectedValue();
        if (invoice == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        CustomerPicker customerPicker = new CustomerPicker();
        customerPicker.setVisible(true);
        customerPicker.giveMeCustomer(newCustomer -> {invoice.setCustomer(newCustomer);
        JOptionPane.showMessageDialog(rootPane, "Customer successfully changed to " + invoice.getCustomer().toString() + " !");
        saveInvoice(invoice, false);
        });

    }//GEN-LAST:event_btnInvoiceCustomerChangeActionPerformed

    private void btnInvoiceShippingChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceShippingChangeActionPerformed
        Invoice invoice = lstInvoiceList.getSelectedValue();
        if (invoice == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        AddressPicker addressPicker = new AddressPicker();
        addressPicker.setVisible(true);
        addressPicker.giveMeAddress(newAddress -> {invoice.setShippingAddress(newAddress);
        JOptionPane.showMessageDialog(rootPane, "Shipping address successfully changed to " + invoice.getShippingAddress().toString() + " !");
        saveInvoice(invoice, false);
        });
    }//GEN-LAST:event_btnInvoiceShippingChangeActionPerformed

    private void btnInvoiceRemoveCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceRemoveCustomerActionPerformed
        Invoice invoice = lstInvoiceList.getSelectedValue();
        if (invoice == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        if (invoice.getCustomer() == null) {
            JOptionPane.showMessageDialog(rootPane, "Invoice has no customer.");
            return;
        }
        invoice.setCustomer(null);
        JOptionPane.showMessageDialog(rootPane, "Customer successfully removed from invoice!");
        saveInvoice(invoice, false);
        loadInvoices();
    }//GEN-LAST:event_btnInvoiceRemoveCustomerActionPerformed

    private void btnInvoiceRemoveShippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvoiceRemoveShippingActionPerformed
        Invoice invoice = lstInvoiceList.getSelectedValue();
        if (invoice == null) {
            JOptionPane.showMessageDialog(rootPane, "No invoice selected.");
            return;
        }
        if (invoice.getShippingAddress() == null) {
            JOptionPane.showMessageDialog(rootPane, "Invoice has no shipping address.");
            return;
        }
        invoice.setShippingAddress(null);
        JOptionPane.showMessageDialog(rootPane, "Shipping address successfully removed from invoice!");
        saveInvoice(invoice, false);
        loadInvoices();
    }//GEN-LAST:event_btnInvoiceRemoveShippingActionPerformed

    /* Invoice Panel */
    /* ************* */

    private final String invoiceSearchFilter = "search...";
    private final String invoiceStatusTransactionTypeDefaultFilter = "All";

    // cursed overloaded methods
    private void loadInvoices() {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }

    private void loadInvoices(String token) {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData(token));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }

    private void loadInvoices(Status status) {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData(status));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }

    private void loadInvoices(TransactionType transactionType) {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData(transactionType));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }

    private void loadInvoices(Status status, TransactionType transactionType) {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData(status, transactionType));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }

    private void loadInvoices(Status status, TransactionType transactionType, String token) {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData(status, transactionType, token));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }

    private void loadInvoices(TransactionType transactionType, String token) {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData(transactionType, token));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }

    private void loadInvoices(Status status, String token) {
        DefaultListModel<Invoice> invoices = new DefaultListModel<>();
        try {
            invoices.addAll(invoiceHandler.getData(status, token));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstInvoiceList.setModel(invoices);
    }


    private void invoiceSearchDecider() {
        // cursed branched programming.

        // no text
        if (isInvoiceTextFilterEmpty()) {
            // no filters
            if (areInvoiceSearchFiltersEmpty()) {
                loadInvoices();
                return;
            }
            // all filters
            if (areInvoiceSearchFiltersFilled()) {
                loadInvoices(getInvoiceStatusFilter(), getInvoiceTransactionTypeFilter());
                return;
            }

            // some filters
            if (isInvoiceStatusSearchEmpty()) {
                loadInvoices(getInvoiceTransactionTypeFilter());
                return;
            } else {
                loadInvoices(getInvoiceStatusFilter());
            }
        // text
        } else {
            // no filters
            if (areInvoiceSearchFiltersEmpty()) {
                loadInvoices(txtInvoiceSearchBar.getText());
                return;
            }
            // all filters
            if (areInvoiceSearchFiltersFilled()) {
                loadInvoices(getInvoiceStatusFilter(), getInvoiceTransactionTypeFilter(), txtInvoiceSearchBar.getText());
                return;
            }
            // some filters
            if (isInvoiceStatusSearchEmpty()) {
                loadInvoices(getInvoiceTransactionTypeFilter(), txtInvoiceSearchBar.getText());
                return;
            } else {
                loadInvoices(getInvoiceStatusFilter(), txtInvoiceSearchBar.getText());
            }
        }
    }

    private Status getInvoiceStatusFilter() {
        return ((Status)cmbInvoiceStatusFilter.getSelectedItem());
    }

    private TransactionType getInvoiceTransactionTypeFilter() {
        return ((TransactionType)cmbInvoiceTransactionFilter.getSelectedItem());
    }

    private boolean isInvoiceTextFilterEmpty() {
        return txtInvoiceSearchBar.getText().equals(invoiceSearchFilter) || txtInvoiceSearchBar.getText().isBlank();
    }

    private boolean isInvoiceStatusSearchEmpty() {
        return getInvoiceStatusFilter().getName().equals(invoiceStatusTransactionTypeDefaultFilter);
    }

    private boolean isInvoiceTransactionSearchEmpty() {
        return getInvoiceTransactionTypeFilter().getName().equals(invoiceStatusTransactionTypeDefaultFilter);
    }

    private boolean areInvoiceSearchFiltersEmpty() {
        return isInvoiceStatusSearchEmpty() && isInvoiceTransactionSearchEmpty();
    }

    private boolean areInvoiceSearchFiltersFilled() {
        return !isInvoiceStatusSearchEmpty() && !isInvoiceTransactionSearchEmpty();
    }

    private void loadInvoiceStatusesTransactions() {
        Status status = new Status();
        TransactionType transactionType = new TransactionType();
        status.setName(invoiceStatusTransactionTypeDefaultFilter);
        transactionType.setName(invoiceStatusTransactionTypeDefaultFilter);
        // temporary files for choosing stuff.
        loadStatuses(cmbInvoiceStatusFilter);
        loadTransactionTypes(cmbInvoiceTransactionFilter);
        cmbInvoiceStatusFilter.addItem(status);
        cmbInvoiceTransactionFilter.addItem(transactionType);
        // end of cursed code
        cmbInvoiceStatusFilter.setSelectedItem(status);
        cmbInvoiceTransactionFilter.setSelectedItem(transactionType);
    }

    private void resetInvoiceSearchFilters() {
        txtInvoiceSearchBar.setText(invoiceSearchFilter);
        loadInvoiceStatusesTransactions();
        loadInvoices();
    }

    private void updateInvoiceArticles(Invoice invoice) {
        DefaultListModel<ArticleInvoice> articleInvoicesModel = new DefaultListModel<>();
        articleInvoicesModel.addAll(invoice.getArticleInvoice());
        lstInvoiceArticle.setModel(articleInvoicesModel);
    }

    private void showInvoiceInformation(Invoice invoice) {
        refreshInvoiceInformation();
        txtInvoiceAmountDue.setText(invoice.getAmountDue().toString());
        txtInvoiceAmountPaid.setText(invoice.getAmountPaid().toString());
        txtInvoiceSubtotal.setText(invoice.getSubtotal().toString());
        txtInvoiceTotal.setText(invoice.getTotal().toString());
        cmbInvoiceStatus.setSelectedItem(invoice.getStatus());
        cmbInvoiceTransaction.setSelectedItem(invoice.getTransactionType());
    }

    private void refreshInvoiceInformation() {
        txtInvoiceAmountDue.setText("");
        txtInvoiceAmountPaid.setText("");
        txtInvoiceSubtotal.setText("");
        txtInvoiceTotal.setText("");
        loadInvoiceInformationStatusTransaction();
    }

    private void loadInvoiceInformationStatusTransaction() {
        loadStatuses(cmbInvoiceStatus);
        loadTransactionTypes(cmbInvoiceTransaction);
    }

    private void updateInvoiceArticleInformation(ArticleInvoice articleInvoice) {
        refreshInvoiceArticleInformation();
        txtInvoiceArticleDate.setText(articleInvoice.getDateOfCreation().toString());
        txtInvoiceArticleWholesale.setText(articleInvoice.getWholesalePrice().toString());
        txtInvoiceArticleTaxRate.setText(articleInvoice.getTaxRate().toString());
        txtInvoiceArticleRetail.setText(articleInvoice.getRetailPrice().toString());
        txtInvoiceArticleDiscount.setText(articleInvoice.getDiscount().toString());
        txtInvoiceArticleQuantity.setText(articleInvoice.getQuantity().toString());
        txtInvoiceArticleTotal.setText(articleInvoice.getTotal().toString());
        if (articleInvoice.getNote() != null) {
            txtInvoiceArticleNote.setText(articleInvoice.getNote());
        }
    }

    private void refreshInvoiceArticleInformation() {
        txtInvoiceArticleDate.setText("");
        txtInvoiceArticleWholesale.setText("");
        txtInvoiceArticleTaxRate.setText("");
        txtInvoiceArticleRetail.setText("");
        txtInvoiceArticleDiscount.setText("");
        txtInvoiceArticleQuantity.setText("");
        txtInvoiceArticleTotal.setText("");
        txtInvoiceArticleNote.setText("");
    }

    private void setInvoiceAsPaid(Invoice invoice) {
        txtInvoiceAmountPaid.setText(invoice.getAmountDue().toString());
    }
    
    
    private void saveInvoice(Invoice invoice, boolean collectData) {
        if (collectData) {
            invoice.setAmountDue(new BigDecimal(txtInvoiceAmountDue.getText()));
            invoice.setAmountPaid(new BigDecimal(txtInvoiceAmountPaid.getText()));
            invoice.setSubtotal(new BigDecimal(txtInvoiceSubtotal.getText()));
            invoice.setTotal(new BigDecimal(txtInvoiceTotal.getText()));
            invoice.setStatus((Status) cmbInvoiceStatus.getSelectedItem());
            invoice.setTransactionType((TransactionType) cmbInvoiceTransaction.getSelectedItem());
        }
        invoiceHandler.setEntity(invoice);
        try {
            invoiceHandler.update();
            JOptionPane.showMessageDialog(rootPane, "Invoice successfully saved!");
        } catch (InvoiceGeneratorException e) {
            JOptionPane.showMessageDialog(rootPane, "Invoice could not be saved.");
            return;
        }
        loadInvoices();
    }

    private void saveArticleInvoice(ArticleInvoice articleInvoice) {
        articleInvoice.setWholesalePrice(new BigDecimal(txtInvoiceArticleWholesale.getText()));
        articleInvoice.setTaxRate(new BigDecimal(txtInvoiceArticleTaxRate.getText()));
        articleInvoice.setRetailPrice(new BigDecimal(txtInvoiceArticleRetail.getText()));
        articleInvoice.setDiscount(new BigDecimal(txtInvoiceArticleQuantity.getText()));
        // quantity must be deducted or added to the stockpile
        Long articleQuantityDifference = Long.parseLong(txtInvoiceArticleQuantity.getText()) - articleInvoice.getQuantity();
        articleInvoice.getArticle().setWarehouseQuantity(
                articleInvoice.getArticle().getWarehouseQuantity() - articleQuantityDifference
        );
        // temp code looks horrible but works
        try {
            articleHandler.setEntity(articleInvoice.getArticle());
            articleHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        // end of terrible code
        articleInvoice.setQuantity(Long.parseLong(txtInvoiceArticleQuantity.getText()));
        articleInvoice.setTotal(new BigDecimal(txtInvoiceArticleTotal.getText()));
        articleInvoiceHandler.setEntity(articleInvoice);
        try {
            articleInvoiceHandler.update();
            JOptionPane.showMessageDialog(rootPane, "Article in invoice successfully updated!");
        } catch (InvoiceGeneratorException e) {
            JOptionPane.showMessageDialog(rootPane, "Something went wrong while updating article in invoice.");
            e.printStackTrace();
        }
    }

    private void deleteArticleInvoice(ArticleInvoice articleInvoice) {
        articleInvoiceHandler.setEntity(articleInvoice);
        Invoice invoice = articleInvoice.getInvoice();
        invoiceHandler.setEntity(invoice);
        invoice.getArticleInvoice().remove(articleInvoice);
        try {
            invoiceHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Something went wrong while updating invoice.");
        }
        try {
            articleInvoiceHandler.delete();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Something went wrong while deleting article in invoice.");
        }
        // temp deduction from stockpile.
        Article articleFromInvoice = articleInvoice.getArticle();
        articleFromInvoice.setWarehouseQuantity(articleFromInvoice.getWarehouseQuantity() + articleInvoice.getQuantity());
        try {
            articleHandler.setEntity(articleFromInvoice);
            articleHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Something went wrong while updating article quantity in warehouse.");
        }
    }

    private void deleteArticleInvoiceUpdate(ArticleInvoice articleInvoice) {
        Invoice invoice = articleInvoice.getInvoice();
        deleteArticleInvoice(articleInvoice);
        updateInvoicePrice(invoice);
        showInvoiceInformation(invoice);
        updateInvoiceArticles(invoice);
    }

    private void updateInvoicePrice(Invoice invoice) {
        calculateInvoiceTotal(invoice);
        calculateInvoiceSubtotal(invoice);
        setInvoiceAmountPaid(invoice);
    }

    private void setInvoiceAmountPaid(Invoice invoice) {
        invoice.setAmountDue(invoice.getTotal());
    }

    private void calculateInvoiceSubtotal(Invoice invoice) {
        List<ArticleInvoice> articleInvoices = invoice.getArticleInvoice();
        BigDecimal subtotal = BigDecimal.ZERO;
        for (ArticleInvoice articleInvoice : articleInvoices) {
            subtotal = subtotal.add(articleInvoice.getWholesalePrice().multiply(BigDecimal.valueOf(articleInvoice.getQuantity())));
        }
        invoice.setSubtotal(subtotal);
    }

    private void calculateInvoiceTotal(Invoice invoice) {
        List<ArticleInvoice> articleInvoices = invoice.getArticleInvoice();
        BigDecimal total = BigDecimal.ZERO;
        for (ArticleInvoice articleInvoice : articleInvoices) {
            total = total.add(articleInvoice.getTotal());
        }
        invoice.setTotal(total);
    }

    private void deleteInvoice(Invoice invoice) {
        deleteArticlesFromInvoices(invoice);
//        invoiceHandler.setEntity(invoice);
//        try {
//            invoiceHandler.update();
//            invoiceHandler.delete();
//        } catch (InvoiceGeneratorException e) {
//            e.printStackTrace();
//            JOptionPane.showMessageDialog(rootPane, "Something went wrong while deleting invoice.");
//            return;
//        }
        loadInvoices();
        JOptionPane.showMessageDialog(rootPane, "Invoice successfully deleted!");
    }

    private void deleteArticlesFromInvoices(Invoice invoice) {
//        List<ArticleInvoice> articleInvoices = invoice.getArticleInvoice();
//        if (articleInvoices.size() == 0) {
//            return;
//        }
//        invoice.setArticleInvoice(null);
//        for (ArticleInvoice articleInvoice : articleInvoices) {
//            deleteArticleInvoice(articleInvoice);
//            articleInvoice.setInvoice(null);
//            try {
//                articleInvoiceHandler.setEntity(articleInvoice);
//                articleInvoiceHandler.delete();
//            } catch (InvoiceGeneratorException e) {
//                e.printStackTrace();
//            }
//        }
        try {
            invoiceHandler.setEntity(invoice);
            invoiceHandler.delete();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    /* ************* */

    /* Customer Panel */
    /* ************** */

    private void loadCustomers() {
        DefaultListModel<Customer> customers = new DefaultListModel<>();
        try {
            customers.addAll(customerHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstCustomerList.setModel(customers);
    }

    private void clearCustomerInformation() {
        txtCustomerID.setText("");
        txtCustomerDateAdded.setText("");
        txtCustomerNationalIDNumber.setText("");
        jcbCustomerTypeCheckBox.setSelected(false);
        txtCustomerFirstName.setText("");
        txtCustomerMiddleName.setText("");
        txtCustomerLastName.setText("");
        txtCustomerLegalName.setText("");
        txtCustomerVATID.setText("");
    }

    private void updateCustomerInformation(Customer customer) {
        clearCustomerInformation();
        txtCustomerID.setText("" + customer.getId());
        txtCustomerDateAdded.setText(customer.getDateOfCreation().toString());
        txtCustomerNationalIDNumber.setText(customer.getNationalIdNumber());
        jcbCustomerTypeCheckBox.setSelected(customer.isType());
        if (customer.isType() == Customer.NATURAL_PERSON) {
            txtCustomerFirstName.setText(customer.getFirstName());
            txtCustomerMiddleName.setText(customer.getMiddleName());
            txtCustomerLastName.setText(customer.getLastName());
        } else {
            txtCustomerLegalName.setText(customer.getName());
            txtCustomerVATID.setText(customer.getVATID());
        }
    }

    private void selectCustomer(Customer customer) {
        lstCustomerList.grabFocus();
        lstCustomerList.clearSelection();
        lstCustomerList.setSelectedValue(customer, true);
        updateCustomerInformation(lstCustomerList.getSelectedValue());
    }

    private void gotoAddress(Address address) {
        tpAccounting.setSelectedIndex(0); // go to addresses tab
        selectAddress(address);
    }

    private void updateCustomer(Customer customer) {
        collectCustomerInformation(customer);
        try {
            customerHandler.setEntity(customer);
            customerHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void collectCustomerInformation(Customer customer) {
        customer.setType(jcbCustomerTypeCheckBox.isSelected());
        if (customer.isType() == Customer.NATURAL_PERSON) {
            customer.setFirstName(txtCustomerFirstName.getText());
            customer.setMiddleName(txtCustomerMiddleName.getText());
            customer.setLastName(txtCustomerLastName.getText());
            customer.setNationalIdNumber(txtCustomerNationalIDNumber.getText());
        } else {
            customer.setName(txtCustomerLegalName.getText());
            customer.setVATID(txtCustomerVATID.getText());
        }
    }

    private void deleteCustomer(Customer customer) {
        customerHandler.setEntity(customer);
        try {
            customerHandler.delete();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void saveNewCustomer() {
        Customer newCustomer = new Customer();
        collectCustomerInformation(newCustomer);
        newCustomer.setDateOfCreation(Instant.now());
        AddressPicker addressPicker = new AddressPicker();
        addressPicker.setVisible(true);
        addressPicker.giveMeAddress(newAddress -> {
            try {
                newCustomer.setBillingAddress(newAddress);
                customerHandler.setEntity(newCustomer);
                customerHandler.create();
                loadCustomers();
            } catch (InvoiceGeneratorException e) {
                e.printStackTrace();
            }
        });
    }

    private void customerChangeAddAddress(boolean addressType) {
        AddressPicker addressPicker = new AddressPicker();
        addressPicker.setVisible(true);
        addressPicker.giveMeAddress(newAddress -> customerSetAddress(newAddress, addressType));
    }

    public void customerSetAddress(Address newAddress, boolean addressType) {
        Customer customer = lstCustomerList.getSelectedValue();
        if (addressType) { // billing
            customer.setBillingAddress(newAddress);
        } else {
            customer.setShippingAddress(newAddress);
        }
        customerHandler.setEntity(customer);
        try {
            customerHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }


    /* ************** */

    /* Article Panel */
    /* ************* */

    private void loadArticles() {
        DefaultListModel<Article> articles = new DefaultListModel<>();
        try {
            articles.addAll(articleHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstArticleList.setModel(articles);
    }

    private void deleteArticle() {
        Article article = lstArticleList.getSelectedValue();
        if (article == null) {
            JOptionPane.showMessageDialog(rootPane, "An article must be selected.");
            return;
        }
        articleHandler.setEntity(article);
        try {
            articleHandler.delete();
        } catch (InvoiceGeneratorException e) {
            JOptionPane.showMessageDialog(rootPane, "Something went wrong while deleting article.");
            return;
        }
        JOptionPane.showMessageDialog(rootPane, "Article successfully deleted!");
        loadArticles();
    }

    private void updateArticleInformation(Article article) {
        clearArticleInformation();
        txtArticleID.setText(article.getId().toString());
        txtArticleShortName.setText(article.getShortName());
        txtArticleWarehouseQuantity.setText(article.getWarehouseQuantity().toString());
        txtArticleWarehouseLocation.setText(article.getWarehouseLocation());
        txtArticleLongName.setText(article.getLongName());
        txtArticleShortDescription.setText(article.getShortDescription());
        txtArticleLongDescription.setText(article.getLongDescription());
        txtArticleTaxRate.setText(article.getTaxRate().toString());
        txtArticleWholesalePrice.setText(article.getWholesalePrice().toString());
        txtArticleRetailPrice.setText(article.getRetailPrice().toString());
    }

    private void clearArticleInformation() {
        txtArticleID.setText("");
        txtArticleShortName.setText("");
        txtArticleWarehouseQuantity.setText("");
        txtArticleWarehouseLocation.setText("");
        txtArticleLongName.setText("");
        txtArticleShortDescription.setText("");
        txtArticleLongDescription.setText("");
        txtArticleTaxRate.setText(Article.STANDARD_TAX_RATE + "");
        txtArticleWholesalePrice.setText("");
        txtArticleRetailPrice.setText("");
    }

    private void updateArticle(Article article) {
        if (!collectArticleInformation(article)) {
                return;
            }
        try {
            articleHandler.setEntity(article);
            articleHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private boolean collectArticleInformation(Article article) {
        article.setLongDescription(txtArticleLongDescription.getText());
        article.setLongName(txtArticleLongName.getText());
        try {
            article.setTaxRate(new BigDecimal(txtArticleTaxRate.getText()));
            article.setWholesalePrice(new BigDecimal(txtArticleWholesalePrice.getText()));
            article.setRetailPrice(new BigDecimal(txtArticleRetailPrice.getText()));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Please enter digits for tax rate, wholesale and retail price.");
            e.printStackTrace();
            return false;
        }
        article.setShortDescription(txtArticleShortDescription.getText());
        article.setShortName(txtArticleShortName.getText());
        article.setWarehouseLocation(txtArticleWarehouseLocation.getText());
        article.setWarehouseQuantity(Long.parseLong(txtArticleWarehouseQuantity.getText()));
        return true;
    }

    private void calculateArticlePriceDetails() {
        List<JTextField> textFieldList = new ArrayList<>();
        textFieldList.add(txtArticleRetailPrice);
        textFieldList.add(txtArticleWholesalePrice);
        textFieldList.add(txtArticleTaxRate);
        int counter = 0;
        for (JTextField textField : textFieldList) {
            if (textField.getText().isBlank()) {
                counter++;
            }
        }
        String message;
        switch (counter) {
            case 0:
                message = "At least one field must be empty in order to calculate price details.";
                break;
            case 2:
            case 3:
                message = "At least two fields must be filled in to be able to calculate price details";
                break;
            default:
                message = "";
        }
        if (!message.isBlank()) {
            JOptionPane.showMessageDialog(rootPane, message);
            return;
        }

        if (txtArticleRetailPrice.getText().isBlank()) {
            calculateArticleRetailPrice();
            return;
        }
        if (txtArticleWholesalePrice.getText().isBlank()) {
            calculateArticleWholesalePrice();
            return;
        }
        if (txtArticleTaxRate.getText().isBlank()) {
            calculateArticleTaxRate();
            return;
        }
    }

    private void calculateArticleRetailPrice() {
        BigDecimal retailPrice;
        BigDecimal articleWholesalePrice = new BigDecimal(txtArticleWholesalePrice.getText());
        BigDecimal articleTaxRate = new BigDecimal(txtArticleTaxRate.getText()).divide(BigDecimal.valueOf(100), 2, RoundingMode.HALF_UP);
        retailPrice = articleWholesalePrice
                .multiply(articleTaxRate.add(BigDecimal.ONE))
                .setScale(2, RoundingMode.HALF_UP);
        txtArticleRetailPrice.setText(retailPrice.toString());
    }

    private void calculateArticleTaxRate() {
        BigDecimal taxRate;
        BigDecimal articleRetailPrice = new BigDecimal(txtArticleRetailPrice.getText());
        BigDecimal articleWholesalePrice = new BigDecimal(txtArticleWholesalePrice.getText());
        taxRate = articleRetailPrice.subtract(articleWholesalePrice).divide(articleWholesalePrice, 2, RoundingMode.HALF_UP).multiply(BigDecimal.valueOf(100));
        txtArticleTaxRate.setText(taxRate.toString());
    }

    private void calculateArticleWholesalePrice() {
        BigDecimal wholesalePrice;
        BigDecimal articleRetailPrice = new BigDecimal(txtArticleRetailPrice.getText());
        BigDecimal articleTaxRate = new BigDecimal(txtArticleTaxRate.getText()).divide(BigDecimal.valueOf(100), 2, RoundingMode.HALF_UP);
        wholesalePrice = articleRetailPrice.divide(articleTaxRate.add(BigDecimal.ONE), 2, RoundingMode.HALF_UP);
        txtArticleWholesalePrice.setText(wholesalePrice.toString());
    }

    private void saveNewArticle() {
        Article newArticle = new Article();
        if (!collectArticleInformation(newArticle)) {
            return;
        }
        try {
            articleHandler.setEntity(newArticle);
            articleHandler.create();
            loadArticles();
            JOptionPane.showMessageDialog(rootPane, "Article successfully added!");
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }

    }

    /* ************* */

    /* Address Panel */
    /* ************** */

    private void loadAddresses() {
        DefaultListModel<Address> addresses = new DefaultListModel<>();
        try {
            addresses.addAll(addressHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstAddressList.setModel(addresses);
    }

    private void updateAddressInformation(Address address) {
        clearAddressInformation();
        clearAddressCustomerInformation();
        cbAddressType.setSelected(address.isType());
        txtAddressId.setText(address.getId().toString());
        txtAddressCity.setText(address.getCity());
        txtAddressZIP.setText(address.getZIPCode());
        txtAddressStreet.setText(address.getStreet());
        txtAddressStreetNumber.setText(address.getStreetNumber());
        txtAddressStreetLetter.setText(address.getStreetLetter());
        txtAddressCountry.setText(address.getCountry());
        updateAddressCustomerList(address);
    }

    private void updateAddressCustomerList(Address address) {
        DefaultListModel<Customer> customers = new DefaultListModel<>();
        try {
            customers.addAll(customerHandler.getCustomersWithAddress(address));
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstAddressCustomerList.setModel(customers);
    }

    private void clearAddressInformation() {
        cbAddressType.setSelected(false);
        txtAddressId.setText("");
        txtAddressCity.setText("");
        txtAddressZIP.setText("");
        txtAddressStreet.setText("");
        txtAddressStreetNumber.setText("");
        txtAddressStreetLetter.setText("");
        txtAddressCountry.setText("");
    }

    private void clearAddressCustomerInformation() {
        lstAddressCustomerList.setModel(new DefaultListModel<>());
    }

    private void gotoCustomer(Customer customer) {
        tpAccounting.setSelectedIndex(1); // goes to customer tab
        selectCustomer(customer);
    }

    private void selectAddress(Address address) {
        lstAddressList.grabFocus();
        lstAddressList.clearSelection();
        lstAddressList.setSelectedValue(address, true);
        updateAddressInformation(lstAddressList.getSelectedValue());
    }

    private void updateAddress(Address address) {
        collectAddressInformation(address);
        try {
            addressHandler.setEntity(address);
            addressHandler.update();
            loadAddresses();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void collectAddressInformation(Address address) {
        address.setType(cbAddressType.isSelected());
        address.setCity(txtAddressCity.getText());
        address.setZIPCode(txtAddressZIP.getText());
        address.setStreet(txtAddressStreet.getText());
        address.setStreetNumber(txtAddressStreetNumber.getText());
        address.setStreetLetter(txtAddressStreetLetter.getText());
        address.setCountry(txtAddressCountry.getText());
    }

    private void deleteAddress(Address address) {
        addressHandler.setEntity(address);
        try {
            addressHandler.delete();
            loadAddresses();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void saveNewAddress() {
        Address newAddress = new Address();
        collectAddressInformation(newAddress);
        addressHandler.setEntity(newAddress);
        if (!genericSaveCheck("address")) {
            return;
        }
        try {
            addressHandler.create();
            clearAddressInformation();
            loadAddresses();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    /* ************** */

    /* ******** */
    /* Register */

    private Customer registerCustomer;
    private Address registerShippingAddress;
    private Article registerArticle;
    private final String[] registerColumnNames = {"#",
        "Name",
        "Location",
        "Wholesale",
        "Tax",
        "Retail",
        "Discount",
        "Quantity",
        "Total"
    };
    // to be filled out once the components are initialised.
    private List<ArticleInvoice> registerArticleInvoices = new ArrayList<>();

    private void getNewRegisterCustomer() {
        CustomerPicker customerPicker = new CustomerPicker();
        customerPicker.setVisible(true);
        // ???
        customerPicker.giveMeCustomer(newCustomer -> {
            registerCustomer = newCustomer;
            registerUpdateTextBox();
        });
    }

    private void removeRegisterCustomer() {
        registerCustomer = null;
        registerUpdateTextBox();
    }

    private void getNewRegisterShippingAddress() {
        AddressPicker addressPicker = new AddressPicker();
        addressPicker.setVisible(true);
        addressPicker.giveMeAddress(newAddress -> {
            registerShippingAddress = newAddress;
            registerUpdateTextBox();
        });
    }

    private void removeRegisterShippingAddress() {
        registerShippingAddress = null;
        registerUpdateTextBox();
    }

    private void registerUpdateTextBox() {
        StringBuilder sb = new StringBuilder();
        txtCustomerShippingInformation.setText("");
        if (registerCustomer != null) {
            sb.append("Customer:\t");
            sb.append(registerCustomer).append("\n");
            sb.append("Billing:\t").append(registerCustomer.getBillingAddress().toString()).append("\n");
        }
        if (registerShippingAddress != null) {
            sb.append("Shipping:\t");
            sb.append(registerShippingAddress).append("\n");
        }
        txtCustomerShippingInformation.setText(sb.toString());
    }

    private void getNewRegisterArticle() {
        ArticlePicker articlePicker = new ArticlePicker();
        articlePicker.setVisible(true);
        articlePicker.giveMeCustomer(newArticle -> {
            registerArticle = newArticle;
            updateRegisterArticle();
        });
    }

    private void updateRegisterArticle() {
        txtRegisterSelectedArticle.setText(registerArticle.toString());
    }

    private void removeRegisterArticle() {
        registerArticle = null;
        clearRegisterArticleInformation();
    }

    private void clearRegisterArticleInformation() {
        if (registerArticle == null) {
            txtRegisterSelectedArticle.setText("");
        }
        txtRegisterDiscount.setText("0");
        txtRegisterQuantity.setText("1");
        txtRegisterArticleNote.setText("");
    }

    private void addArticleToInvoice(Article registerArticle) {
        try {
            ArticleInvoice newArticleInvoice = collectRegisterArticleInformation(registerArticle);
            registerArticleInvoices.add(newArticleInvoice);
            addToRegisterTable(newArticleInvoice);
            updateRegisterTextBoxes();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void updateRegisterTextBoxes() {
        txtRegisterSubtotal.setText(getRegisterInvoiceSubtotal().toString());
        txtRegisterTax.setText(getRegisterInvoiceTax().toString());
        txtRegisterInvoiceTotal.setText(getRegisterInvoiceTotal().toString());
    }

    private BigDecimal getRegisterInvoiceTotal() {
        BigDecimal total = new BigDecimal(0L);
        for (ArticleInvoice articleInvoice : registerArticleInvoices) {
            total = total.add(articleInvoice.getTotal());
        }
        return total;
    }

    private BigDecimal getRegisterInvoiceTax() {
        BigDecimal total = new BigDecimal(0L);
        for (ArticleInvoice articleInvoice : registerArticleInvoices) {
            total = total.add(articleInvoice.getWholesalePrice().multiply(articleInvoice.getArticle().getCalculableTaxRate()).multiply(BigDecimal.valueOf(articleInvoice.getQuantity()))).setScale(2, RoundingMode.HALF_UP);
        }
        return total;
    }

    private BigDecimal getRegisterInvoiceSubtotal() {
        BigDecimal total = new BigDecimal(0L);
        for (ArticleInvoice articleInvoice : registerArticleInvoices) {
            total = total.add(articleInvoice.getWholesalePrice().multiply(BigDecimal.valueOf(articleInvoice.getQuantity())));
        }
        return total;
    }

    private void addToRegisterTable(ArticleInvoice newArticleInvoice) {
        ((DefaultTableModel)tblRegisterInvoice.getModel()).addRow(new String[] {
                registerArticleInvoices.size() + "",
                newArticleInvoice.getArticle().getShortName(),
                newArticleInvoice.getArticle().getWarehouseLocation(),
                newArticleInvoice.getArticle().getWholesalePrice().toString(),
                newArticleInvoice.getArticle().getTaxRate().toString(),
                newArticleInvoice.getArticle().getRetailPrice().toString(),
                newArticleInvoice.getDiscount().toString(),
                newArticleInvoice.getQuantity().toString(),
                getArticleInvoiceTotal(newArticleInvoice).toString(),
        });
    }

    @Deprecated
    private BigDecimal getArticleInvoiceTotal(ArticleInvoice newArticleInvoice) {
        BigDecimal total;
        total = newArticleInvoice.getArticle().getRetailPrice().multiply(BigDecimal.valueOf(newArticleInvoice.getQuantity()));
        if (newArticleInvoice.getCalculableDiscount().equals(BigDecimal.ONE)) {
            return total;
        }
        return total.divide(newArticleInvoice.getCalculableDiscount(), 2, RoundingMode.HALF_UP);
    }

    private ArticleInvoice collectRegisterArticleInformation(Article registerArticle) throws InvoiceGeneratorException {
        ArticleInvoice articleInvoice = new ArticleInvoice();
        articleInvoice.setArticle(registerArticle);
        articleInvoice.setDateOfCreation(Instant.now());
        articleInvoice.setDiscount(getRegisterDiscount());
        articleInvoice.setNote(getRegisterArticleNote());
        articleInvoice.setQuantity(getRegisterArticleQuantity());
        articleInvoice.setRetailPrice(registerArticle.getRetailPrice());
        articleInvoice.setTotal(getArticleInvoiceTotal(articleInvoice));
        articleInvoice.setTaxRate(registerArticle.getTaxRate());
        articleInvoice.setWholesalePrice(registerArticle.getWholesalePrice());
        return articleInvoice;
    }

    private long getRegisterArticleQuantity() {
        return Long.parseLong(txtRegisterQuantity.getText());
    }

    private String getRegisterArticleNote() {
        return txtRegisterArticleNote.getText();
    }

    private BigDecimal getRegisterDiscount() throws InvoiceGeneratorException {
        String registerDiscount = txtRegisterDiscount.getText();
        if (registerDiscount.isBlank()) {
            return BigDecimal.ZERO;
        }
        return BigDecimal.valueOf(Long.parseLong(txtRegisterDiscount.getText()));
    }

    private void clearRegisterTable() {
        ( (DefaultTableModel) tblRegisterInvoice.getModel()).setRowCount(0);
    }

    private Invoice issueInvoice() throws InvoiceGeneratorException {
        Invoice invoice = new Invoice();
        invoice.setArticleInvoice(registerArticleInvoices);
        for (ArticleInvoice articleInvoice : registerArticleInvoices) {
            articleInvoice.setInvoice(invoice);
        }
        invoice.setAmountDue(getRegisterInvoiceTotal());
        invoice.setAmountPaid(BigDecimal.ZERO);
        invoice.setDateOfCreation(Instant.now());
        invoice.setSubtotal(getRegisterInvoiceSubtotal());
        invoice.setTotal(getRegisterInvoiceTotal());
        if (registerCustomer != null) {
            invoice.setCustomer(registerCustomer);
        }
        if (registerShippingAddress != null) {
            invoice.setShippingAddress(registerShippingAddress);
        }
        invoice.setStatus((Status) cmbRegisterStatus.getSelectedItem());
        invoice.setTransactionType((TransactionType) cmbRegisterTransactionType.getSelectedItem());
        invoiceHandler.setEntity(invoice);
        try {
            invoiceHandler.create();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Invoice could not be issued.");
            return null;
        }
        if (!createArticleInvoices(invoice)) {
            JOptionPane.showMessageDialog(rootPane, "An empty invoice has been issued.");
        }
        deductArticlesFromInvoice(invoice);
        // clearing stuff we will not need anymore.
        clearRegisterTemporaryInformation();
        JOptionPane.showMessageDialog(rootPane, "Invoice successfully issued!");
        return invoice;
    }

    private void deductArticlesFromInvoice(Invoice invoice) throws InvoiceGeneratorException {
        List<ArticleInvoice> articleInvoices = invoice.getArticleInvoice();
        List<String> warningMessages = new ArrayList<>();
        for (ArticleInvoice articleInvoice : articleInvoices) {
            Article article = articleInvoice.getArticle();
            article.setWarehouseQuantity(article.getWarehouseQuantity() - articleInvoice.getQuantity());
            if (article.getWarehouseQuantity() < 0) {
                warningMessages.add(article.toString());
            }
        }
        if (warningMessages.size() > 0) {
            StringBuilder sb = new StringBuilder();
            for (String myString : warningMessages) {
                sb.append(myString).append("\n");
            }
            if (JOptionPane.showConfirmDialog
                    (rootPane,
                    "Issuing this invoice will deplete warehouse supplies for:\n" + sb.toString() + "\nDo you wish to continue?")
                    != 0) {
                throw new InvoiceGeneratorException("Invoice has not been issued.");
            }
        }
        for (ArticleInvoice articleInvoice : articleInvoices) {
            articleHandler.setEntity(articleInvoice.getArticle());
            try {
                articleHandler.update();
            } catch (InvoiceGeneratorException e) {
                e.printStackTrace();
            }
        }
    }

    private void clearRegisterTemporaryInformation() {
        registerCustomer = null;
        registerShippingAddress = null;
        clearRegisterTable();
        clearRegisterMoneyInfo();
        clearRegisterCustomerInformation();
        registerArticleInvoices = new ArrayList<>();
    }

    private void clearRegisterCustomerInformation() {
        txtCustomerShippingInformation.setText("");
    }

    private void clearRegisterMoneyInfo() {
        txtRegisterSubtotal.setText("");
        txtRegisterTax.setText("");
        txtRegisterDiscount.setText("");
        txtRegisterInvoiceTotal.setText("");
    }

    private boolean createArticleInvoices(Invoice invoice) {
//        for (ArticleInvoice articleInvoice : registerArticleInvoices) {
//            articleInvoice.setInvoice(invoice);
//            articleInvoiceHandler.setEntity(articleInvoice);
//            try {
//                articleInvoiceHandler.create();
//            } catch (InvoiceGeneratorException e) {
//                e.printStackTrace();
//                return false;
//            }
//        }
        return true;
    }

    private void populateRegisterStatusesTransactions() {
        loadStatuses(cmbRegisterStatus);
        loadTransactionTypes(cmbRegisterTransactionType);
    }

    private void removeLastRowRegisterTable() {
        DefaultTableModel registerTableModel = ((DefaultTableModel)tblRegisterInvoice.getModel());
        registerTableModel.setRowCount(registerTableModel.getRowCount() - 1);
    }

//    private void printIssueInvoice() {
//        Invoice invoice = null;
//        try {
//            invoice = issueInvoice();
//        } catch (InvoiceGeneratorException e) {
//            JOptionPane.showMessageDialog(rootPane, "Something went wrong while issuing invoice.");
//            return;
//        }
//        InvoicePrinter invoicePrinter = new InvoicePrinter(invoice);
//
//    }

    /* ******** */


    /* ************** */
    /* ***Options**** */

    private void purgeDatabase() {
        if (JOptionPane.showConfirmDialog(rootPane, "Are you sure you wish to purge the database?\nThis action cannot be reversed.") != 0) {
            return;
        }
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        String hqlString;
        // manually add or remove table names here
        final String[] tableNames = {
                "article_invoice",
                "article",
                "invoice",
                "status",
                "transaction_type",
                "customer",
                "address",
                "operator"
        };
        // workaround for truncating tables with no regard to foreign key constraints
        session.createSQLQuery("SET FOREIGN_KEY_CHECKS = 0").executeUpdate();
        for (String tableName : tableNames) {
            hqlString = "TRUNCATE TABLE " + tableName;
            session.createSQLQuery(hqlString).executeUpdate();
        }
        session.createSQLQuery("SET FOREIGN_KEY_CHECKS = 1").executeUpdate();
        session.getTransaction().commit();
        JOptionPane.showMessageDialog(rootPane, "Database purged. A new operator must now be added manually to database.");
        System.exit(1);
    }

    /* Options */

    /* Statuses */

    private void loadOptionsStatusesTransactions() {
        loadStatuses(cmbStatusChooser);
        loadTransactionTypes(cmbTransactionTypeChooser);
    }

    /* ******** */

    private void loadStatuses(JComboBox<Status> comboBox) {
        clearOptionsStatuses(comboBox);
        List<Status> statuses = new ArrayList<>();
        try {
            statuses = statusHandler.getData();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        for (Status status : statuses) {
            comboBox.addItem(status);
        }
    }

    private void clearOptionsStatuses(JComboBox<Status> comboBox) {
        comboBox.removeAllItems();
    }

    private void loadOptionsStatusInfo() {
        if (cmbStatusChooser.getSelectedItem() == null) {
            return;
        }
        Status selectedStatus = (Status) cmbStatusChooser.getSelectedItem();
        txtStatusName.setText(selectedStatus.getName());
        if (selectedStatus.getDescription() != null) {
            txtStatusDescription.setText(selectedStatus.getDescription());
        }
        if (selectedStatus.getDescriptionLong() != null) {
            txtStatusLongDescription.setText(selectedStatus.getDescriptionLong());
        }
    }

    private void clearOptionsStatusInfo() {
        txtStatusName.setText("");
        txtStatusDescription.setText("");
        txtStatusLongDescription.setText("");
    }

    private Status collectStatusInformation() {
        Status status = new Status();
        status.setName(txtStatusName.getText());
        status.setDescription(txtStatusDescription.getText());
        status.setDescriptionLong(txtStatusLongDescription.getText());
        return status;
    }

    private void addOptionsStatus(Status status) {
        statusHandler.setEntity(status);
        try {
            statusHandler.create();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(rootPane, "Status successfully added!");
        loadStatuses(cmbStatusChooser);
    }

    private void triggerStatusSave() {
        if (cmbStatusChooser.getSelectedItem() == null) {
            return;
        }
        modifyOptionsStatus((Status) cmbStatusChooser.getSelectedItem());
    }

    private void modifyOptionsStatus(Status status) {
        status.setName(txtStatusName.getText());
        status.setDescription(txtStatusDescription.getText());
        status.setDescriptionLong(txtStatusLongDescription.getText());
        statusHandler.setEntity(status);
        try {
            statusHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(rootPane, "Status successfully modified!");
        loadStatuses(cmbStatusChooser);
    }

    private void triggerStatusRemoval() {
        if (cmbStatusChooser.getSelectedItem() == null) {
            return;
        }
        removeOptionsStatus((Status) cmbStatusChooser.getSelectedItem());
    }

    private void removeOptionsStatus(Status status) {
        statusHandler.setEntity(status);
        try {
            statusHandler.delete();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(rootPane, "Status successfully removed!");
        clearOptionsStatusInfo();
        loadStatuses(cmbStatusChooser);
    }


    /* ******* */

    /* Transaction types */

    private void loadTransactionTypes(JComboBox<TransactionType> transactionTypeComboBox) {
        clearOptionsTransactionTypes(transactionTypeComboBox);
        List<TransactionType> transactionTypes = new ArrayList<>();
        try {
            transactionTypes = transactionTypeHandler.getData();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        for (TransactionType transactionType : transactionTypes) {
            transactionTypeComboBox.addItem(transactionType);
        }
    }

    private void clearOptionsTransactionTypes(JComboBox<TransactionType> transactionTypeComboBox) {
        transactionTypeComboBox.removeAllItems();
    }

    private void loadOptionsTransactionTypesInfo() {
        if (cmbTransactionTypeChooser.getSelectedItem() == null) {
            return;
        }
        TransactionType transactionType = (TransactionType) cmbTransactionTypeChooser.getSelectedItem();
        txtTransactionTypeName.setText(transactionType.getName());
        if (transactionType.getDescription() != null) {
            txtTransactionTypeDescription.setText(transactionType.getDescription());
        }
    }

    private void clearOptionsTransactionTypesInfo() {
        txtTransactionTypeName.setText("");
        txtTransactionTypeDescription.setText("");
    }

    private TransactionType collectTransactionTypeInformation() {
        TransactionType transactionType = new TransactionType();
        transactionType.setName(txtTransactionTypeName.getText());
        transactionType.setDescription(txtTransactionTypeDescription.getText());
        return transactionType;
    }

    private void addOptionsTransactionType(TransactionType transactionType) {
        transactionTypeHandler.setEntity(transactionType);
        try {
            transactionTypeHandler.create();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(rootPane, "Transaction type successfully added!");
        loadTransactionTypes(cmbTransactionTypeChooser);
    }

    private void triggerTransactionTypeSave() {
        if (cmbTransactionTypeChooser.getSelectedItem() == null) {
            return;
        }
        modifyOptionsTransactionType((TransactionType) cmbTransactionTypeChooser.getSelectedItem());
    }

    private void modifyOptionsTransactionType(TransactionType transactionType) {
        transactionType.setName(txtTransactionTypeName.getText());
        transactionType.setDescription(txtTransactionTypeDescription.getText());
        transactionTypeHandler.setEntity(transactionType);
        try {
            transactionTypeHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(rootPane, "Transaction type successfully modified!");
        loadTransactionTypes(cmbTransactionTypeChooser);
    }

    private void triggerTransactionTypeRemoval() {
        if (cmbTransactionTypeChooser.getSelectedItem() == null) {
            return;
        }
        removeOptionsTransactionType((TransactionType) cmbTransactionTypeChooser.getSelectedItem());
    }

    private void removeOptionsTransactionType(TransactionType transactionType) {
        transactionTypeHandler.setEntity(transactionType);
        try {
            transactionTypeHandler.delete();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(rootPane, "Transaction type successfully removed!");
        clearOptionsTransactionTypesInfo();
        loadTransactionTypes(cmbTransactionTypeChooser);
    }
    /* ***************** */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addressPanel;
    private javax.swing.JPanel articlePanel;
    private javax.swing.JButton btnAddressAdd;
    private javax.swing.JButton btnAddressClear;
    private javax.swing.JButton btnAddressDelete;
    private javax.swing.JButton btnAddressRevert;
    private javax.swing.JButton btnAddressSave;
    private javax.swing.JButton btnArticleAdd;
    private javax.swing.JButton btnArticleCalculateCost;
    private javax.swing.JButton btnArticleClear;
    private javax.swing.JButton btnArticleDelete;
    private javax.swing.JButton btnArticleRevert;
    private javax.swing.JButton btnArticleSave;
    private javax.swing.JButton btnChangeCustomerBillingAddress;
    private javax.swing.JButton btnChangeCustomerShippingAddress;
    private javax.swing.JButton btnCustomerAddCustomer;
    private javax.swing.JButton btnCustomerBillingAddress;
    private javax.swing.JButton btnCustomerClear;
    private javax.swing.JButton btnCustomerDeleteButton;
    private javax.swing.JButton btnCustomerRevertButton;
    private javax.swing.JButton btnCustomerSaveButton;
    private javax.swing.JButton btnCustomerShippingAddress;
    private javax.swing.JButton btnInvoiceClearSearchFilters;
    private javax.swing.JButton btnInvoiceCustomerChange;
    private javax.swing.JButton btnInvoiceDeleteInvoice;
    private javax.swing.JButton btnInvoiceFilterSearch;
    private javax.swing.JButton btnInvoiceGotoCustomer;
    private javax.swing.JButton btnInvoiceGotoShipping;
    private javax.swing.JButton btnInvoicePaid;
    private javax.swing.JButton btnInvoiceRemoveArticle;
    private javax.swing.JButton btnInvoiceRemoveCustomer;
    private javax.swing.JButton btnInvoiceRemoveShipping;
    private javax.swing.JButton btnInvoiceSaveArticle;
    private javax.swing.JButton btnInvoiceSaveInvoice;
    private javax.swing.JButton btnInvoiceShippingChange;
    private javax.swing.JButton btnIssueInvoice;
    private javax.swing.JButton btnRegisterAddArticle;
    private javax.swing.JButton btnRegisterAddCustomer;
    private javax.swing.JButton btnRegisterAddShipping;
    private javax.swing.JButton btnRegisterClearArticle;
    private javax.swing.JButton btnRegisterRemoveArticle;
    private javax.swing.JButton btnRegisterRemoveCustomer;
    private javax.swing.JButton btnRegisterRemoveLastArticle;
    private javax.swing.JButton btnRegisterRemoveShipping;
    private javax.swing.JButton btnStatusAdd;
    private javax.swing.JButton btnStatusClear;
    private javax.swing.JButton btnStatusRemove;
    private javax.swing.JButton btnStatusSave;
    private javax.swing.JButton btnTransactionTypeAdd;
    private javax.swing.JButton btnTransactionTypeClear;
    private javax.swing.JButton btnTransactionTypeRemove;
    private javax.swing.JButton btnTransactionTypeSave;
    private javax.swing.JCheckBox cbAddressType;
    private javax.swing.JComboBox<Status> cmbInvoiceStatus;
    private javax.swing.JComboBox<Status> cmbInvoiceStatusFilter;
    private javax.swing.JComboBox<TransactionType> cmbInvoiceTransaction;
    private javax.swing.JComboBox<TransactionType> cmbInvoiceTransactionFilter;
    private javax.swing.JComboBox<Status> cmbRegisterStatus;
    private javax.swing.JComboBox<TransactionType> cmbRegisterTransactionType;
    private javax.swing.JComboBox<Status> cmbStatusChooser;
    private javax.swing.JComboBox<TransactionType> cmbTransactionTypeChooser;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JLabel databaseLabel;
    private javax.swing.JPanel databasePanel;
    private javax.swing.JPanel invoicePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JCheckBox jcbCustomerTypeCheckBox;
    private javax.swing.JMenu jmFile;
    private javax.swing.JMenu jmInfo;
    private javax.swing.JMenuBar jmbFileInfoBar;
    private javax.swing.JMenuItem jmiExitButton;
    private javax.swing.JPanel jpAccountingTab;
    private javax.swing.JPanel jpOptionsTab;
    private javax.swing.JPanel jpRegisterTab;
    private javax.swing.JScrollPane jspArticleScrollPane;
    private javax.swing.JScrollPane jspArticleScrollPane1;
    private javax.swing.JScrollPane jspCustomerScrollPane;
    private javax.swing.JLabel lblAddressCity;
    private javax.swing.JLabel lblAddressCity1;
    private javax.swing.JLabel lblAddressCountry;
    private javax.swing.JLabel lblAddressCustomerWAddress;
    private javax.swing.JLabel lblAddressId;
    private javax.swing.JLabel lblAddressStreet;
    private javax.swing.JLabel lblAddressStreetLetter;
    private javax.swing.JLabel lblAddressStreetNumber;
    private javax.swing.JLabel lblArticleIDLabel;
    private javax.swing.JLabel lblArticleLongNameLabel;
    private javax.swing.JLabel lblArticleQuantityLabel;
    private javax.swing.JLabel lblArticleShortDescriptionLabel;
    private javax.swing.JLabel lblArticleShortDescriptionLabel1;
    private javax.swing.JLabel lblArticleShortDescriptionLabel2;
    private javax.swing.JLabel lblArticleShortDescriptionLabel3;
    private javax.swing.JLabel lblArticleShortDescriptionLabel4;
    private javax.swing.JLabel lblArticleShortDescriptionLabel5;
    private javax.swing.JLabel lblArticleShortNameLabel;
    private javax.swing.JLabel lblArticleWarehouseLocationLabel;
    private javax.swing.JLabel lblCustomerAddress;
    private javax.swing.JLabel lblCustomerDateAddedLabel;
    private javax.swing.JLabel lblCustomerIDLabel;
    private javax.swing.JLabel lblCustomerNameLabel;
    private javax.swing.JLabel lblCustomerNationalIDNumberLabel;
    private javax.swing.JLabel lblCustomerTypeLabel;
    private javax.swing.JLabel lblFirstNameLabel;
    private javax.swing.JLabel lblInvoiceAmountDue;
    private javax.swing.JLabel lblInvoiceAmountPaid;
    private javax.swing.JLabel lblInvoiceArticleDate;
    private javax.swing.JLabel lblInvoiceArticleDiscount;
    private javax.swing.JLabel lblInvoiceArticleInformation;
    private javax.swing.JLabel lblInvoiceArticleNote;
    private javax.swing.JLabel lblInvoiceArticleQuantity;
    private javax.swing.JLabel lblInvoiceArticleRetail;
    private javax.swing.JLabel lblInvoiceArticleTaxRate;
    private javax.swing.JLabel lblInvoiceArticleTotal;
    private javax.swing.JLabel lblInvoiceArticleWholesale;
    private javax.swing.JLabel lblInvoiceCustomer;
    private javax.swing.JLabel lblInvoiceInvoiceInformation;
    private javax.swing.JLabel lblInvoiceSearchFilter;
    private javax.swing.JLabel lblInvoiceShipping;
    private javax.swing.JLabel lblInvoiceStatus;
    private javax.swing.JLabel lblInvoiceSubtotal;
    private javax.swing.JLabel lblInvoiceSubtotal1;
    private javax.swing.JLabel lblInvoiceTransaction;
    private javax.swing.JLabel lblLastNameLabel;
    private javax.swing.JLabel lblMiddleNameLabel;
    private javax.swing.JLabel lblRegisterArticle;
    private javax.swing.JLabel lblRegisterBillingAddress1;
    private javax.swing.JLabel lblRegisterCustomer;
    private javax.swing.JLabel lblRegisterDiscount;
    private javax.swing.JLabel lblRegisterInvoiceTotal;
    private javax.swing.JLabel lblRegisterNote;
    private javax.swing.JLabel lblRegisterQuantity;
    private javax.swing.JLabel lblRegisterStatus;
    private javax.swing.JLabel lblRegisterSubtotal;
    private javax.swing.JLabel lblRegisterTax;
    private javax.swing.JLabel lblRegisterTransactionType;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStatusDescription;
    private javax.swing.JLabel lblStatusLongDescription;
    private javax.swing.JLabel lblStatusName;
    private javax.swing.JLabel lblTimeLabel;
    private javax.swing.JLabel lblTransactionType;
    private javax.swing.JLabel lblTransactionTypeDescription;
    private javax.swing.JLabel lblTransactionTypeName;
    private javax.swing.JLabel lblVATIDLabel;
    private javax.swing.JList<Customer> lstAddressCustomerList;
    private javax.swing.JList<Address> lstAddressList;
    private javax.swing.JList<Article> lstArticleList;
    private javax.swing.JList<Customer> lstCustomerList;
    private javax.swing.JList<ArticleInvoice> lstInvoiceArticle;
    private javax.swing.JList<Invoice> lstInvoiceList;
    private javax.swing.JPanel pnlInvoiceArticleInformation;
    private javax.swing.JPanel pnlInvoiceArticleInvoiceInformation;
    private javax.swing.JPanel pnlInvoiceFiltersPanel;
    private javax.swing.JPanel pnlInvoiceInformation;
    private javax.swing.JPanel pnlInvoices;
    private javax.swing.JPanel pnlRegister;
    private javax.swing.JPanel pnlRegisterArticle;
    private javax.swing.JPanel pnlRegisterCustomerInfo;
    private javax.swing.JPanel pnlRegisterInformationPanel;
    private javax.swing.JPanel pnlStatusPanel;
    private javax.swing.JPanel pnlTransactionTypePanel;
    private javax.swing.JButton purgeDatabaseButton;
    private javax.swing.JTabbedPane tabController;
    private javax.swing.JTable tblRegisterInvoice;
    private javax.swing.JTabbedPane tpAccounting;
    private javax.swing.JTextField txtAddressCity;
    private javax.swing.JTextField txtAddressCountry;
    private javax.swing.JTextField txtAddressId;
    private javax.swing.JTextField txtAddressStreet;
    private javax.swing.JTextField txtAddressStreetLetter;
    private javax.swing.JTextField txtAddressStreetNumber;
    private javax.swing.JTextField txtAddressZIP;
    private javax.swing.JTextField txtArticleID;
    private javax.swing.JTextArea txtArticleLongDescription;
    private javax.swing.JTextField txtArticleLongName;
    private javax.swing.JTextField txtArticleRetailPrice;
    private javax.swing.JTextField txtArticleShortDescription;
    private javax.swing.JTextField txtArticleShortName;
    private javax.swing.JTextField txtArticleTaxRate;
    private javax.swing.JTextField txtArticleWarehouseLocation;
    private javax.swing.JTextField txtArticleWarehouseQuantity;
    private javax.swing.JTextField txtArticleWholesalePrice;
    private javax.swing.JTextField txtCustomerDateAdded;
    private javax.swing.JTextField txtCustomerFirstName;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtCustomerLastName;
    private javax.swing.JTextField txtCustomerLegalName;
    private javax.swing.JTextField txtCustomerMiddleName;
    private javax.swing.JTextField txtCustomerNationalIDNumber;
    private javax.swing.JTextArea txtCustomerShippingInformation;
    private javax.swing.JTextField txtCustomerVATID;
    private javax.swing.JTextField txtInvoiceAmountDue;
    private javax.swing.JTextField txtInvoiceAmountPaid;
    private javax.swing.JTextField txtInvoiceArticleDate;
    private javax.swing.JTextField txtInvoiceArticleDiscount;
    private javax.swing.JTextArea txtInvoiceArticleNote;
    private javax.swing.JTextField txtInvoiceArticleQuantity;
    private javax.swing.JTextField txtInvoiceArticleRetail;
    private javax.swing.JTextField txtInvoiceArticleTaxRate;
    private javax.swing.JTextField txtInvoiceArticleTotal;
    private javax.swing.JTextField txtInvoiceArticleWholesale;
    private javax.swing.JTextField txtInvoiceSearchBar;
    private javax.swing.JTextField txtInvoiceSubtotal;
    private javax.swing.JTextField txtInvoiceTotal;
    private javax.swing.JTextArea txtRegisterArticleNote;
    private javax.swing.JTextField txtRegisterDiscount;
    private javax.swing.JTextField txtRegisterInvoiceTotal;
    private javax.swing.JTextField txtRegisterQuantity;
    private javax.swing.JTextField txtRegisterSelectedArticle;
    private javax.swing.JTextField txtRegisterSubtotal;
    private javax.swing.JTextField txtRegisterTax;
    private javax.swing.JTextField txtStatusDescription;
    private javax.swing.JTextArea txtStatusLongDescription;
    private javax.swing.JTextField txtStatusName;
    private javax.swing.JTextField txtTransactionTypeDescription;
    private javax.swing.JTextField txtTransactionTypeName;
    // End of variables declaration//GEN-END:variables
}
