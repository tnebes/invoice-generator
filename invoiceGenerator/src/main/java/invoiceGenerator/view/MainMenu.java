/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package invoiceGenerator.view;

import invoiceGenerator.controller.AddressHandler;
import invoiceGenerator.controller.ArticleHandler;
import invoiceGenerator.controller.CustomerHandler;
import invoiceGenerator.controller.InvoiceHandler;
import invoiceGenerator.model.Address;
import invoiceGenerator.model.Article;
import invoiceGenerator.model.Customer;
import invoiceGenerator.util.InvoiceGeneratorException;
import invoiceGenerator.view.viewUtil.AddressPicker;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author tnebes
 */
public class MainMenu extends javax.swing.JFrame {

    InvoiceHandler invoiceHandler;
    CustomerHandler customerHandler;
    ArticleHandler articleHandler;
    AddressHandler addressHandler;

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        this.invoiceHandler = new InvoiceHandler();
        this.customerHandler = new CustomerHandler();
        this.articleHandler = new ArticleHandler();
        this.addressHandler = new AddressHandler();
        initComponents();
        setTitle(Application.APPLICATION_TITLE + " " + Application.operator.getFirstLastName());
        loadFromDatabase();
        new MyTime().start();
    }

    private void loadFromDatabase() {
        //loadInvoices();
        loadAddresses();
        loadCustomers();
        loadArticles();
    }

    private class MyTime extends Thread {

        private SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MMM dd YYYY HH:mm:ss '- week 'ww");
        
        @Override
        public void run() {
            while (true) {
                lblTimeLabel.setText(simpleDateFormat.format(new Date()));
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private boolean genericSaveCheck(String object) {
        return JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to save this " + object + "?",
                "Save Check",
                JOptionPane.YES_NO_OPTION) == 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        tabController = new javax.swing.JTabbedPane();
        jpRegisterTab = new javax.swing.JPanel();
        customerScrollPane = new javax.swing.JScrollPane();
        customerTextArea = new javax.swing.JTextArea();
        addCustomerButton = new javax.swing.JButton();
        removeCustomerButton = new javax.swing.JButton();
        shippingScrollPane = new javax.swing.JScrollPane();
        shippingTextArea = new javax.swing.JTextArea();
        addCustomerButton1 = new javax.swing.JButton();
        removeCustomerButton1 = new javax.swing.JButton();
        printInvoiceButton = new javax.swing.JButton();
        jpAccountingTab = new javax.swing.JPanel();
        tpAccounting = new javax.swing.JTabbedPane();
        invoicePanel = new javax.swing.JPanel();
        customerPanel = new javax.swing.JPanel();
        jspCustomerScrollPane = new javax.swing.JScrollPane();
        lstCustomerList = new javax.swing.JList<>();
        lblCustomerIDLabel = new javax.swing.JLabel();
        lblCustomerDateAddedLabel = new javax.swing.JLabel();
        lblCustomerNationalIDNumberLabel = new javax.swing.JLabel();
        lblFirstNameLabel = new javax.swing.JLabel();
        lblMiddleNameLabel = new javax.swing.JLabel();
        lblLastNameLabel = new javax.swing.JLabel();
        lblCustomerNameLabel = new javax.swing.JLabel();
        lblVATIDLabel = new javax.swing.JLabel();
        lblCustomerTypeLabel = new javax.swing.JLabel();
        jcbCustomerTypeCheckBox = new javax.swing.JCheckBox();
        btnCustomerDeleteButton = new javax.swing.JButton();
        btnCustomerSaveButton = new javax.swing.JButton();
        btnCustomerRevertButton = new javax.swing.JButton();
        txtCustomerID = new javax.swing.JTextField();
        txtCustomerDateAdded = new javax.swing.JTextField();
        txtCustomerNationalIDNumber = new javax.swing.JTextField();
        txtCustomerFirstName = new javax.swing.JTextField();
        txtCustomerMiddleName = new javax.swing.JTextField();
        txtCustomerLastName = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtCustomerLegalName = new javax.swing.JTextField();
        txtCustomerVATID = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lblCustomerAddress = new javax.swing.JLabel();
        btnCustomerBillingAddress = new javax.swing.JButton();
        btnCustomerShippingAddress = new javax.swing.JButton();
        btnCustomerAddCustomer = new javax.swing.JButton();
        btnCustomerClear = new javax.swing.JButton();
        btnChangeCustomerBillingAddress = new javax.swing.JButton();
        btnChangeCustomerShippingAddress = new javax.swing.JButton();
        articlePanel = new javax.swing.JPanel();
        jspArticleScrollPane = new javax.swing.JScrollPane();
        lstArticleList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        lblArticleIDLabel = new javax.swing.JLabel();
        lblArticleShortNameLabel = new javax.swing.JLabel();
        lblArticleWarehouseLocationLabel = new javax.swing.JLabel();
        lblArticleQuantityLabel = new javax.swing.JLabel();
        lblArticleShortDescriptionLabel = new javax.swing.JLabel();
        lblArticleShortDescriptionLabel1 = new javax.swing.JLabel();
        lblArticleLongNameLabel = new javax.swing.JLabel();
        txtArticleID = new javax.swing.JTextField();
        txtArticleShortName = new javax.swing.JTextField();
        txtArticleWarehouseQuantity = new javax.swing.JTextField();
        txtArticleWarehouseLocation = new javax.swing.JTextField();
        txtArticleLongName = new javax.swing.JTextField();
        txtArticleShortDescription = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArticleLongDescription = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        lblArticleShortDescriptionLabel2 = new javax.swing.JLabel();
        txtArticleTaxRate = new javax.swing.JTextField();
        lblArticleShortDescriptionLabel3 = new javax.swing.JLabel();
        lblArticleShortDescriptionLabel4 = new javax.swing.JLabel();
        txtArticleWholesalePrice = new javax.swing.JTextField();
        lblArticleShortDescriptionLabel5 = new javax.swing.JLabel();
        txtArticleRetailPrice = new javax.swing.JTextField();
        btnArticleSave = new javax.swing.JButton();
        btnArticleRevert = new javax.swing.JButton();
        btnArticleAdd = new javax.swing.JButton();
        btnArticleDelete = new javax.swing.JButton();
        btnArticleCalculateCost = new javax.swing.JButton();
        btnArticleClear = new javax.swing.JButton();
        addressPanel = new javax.swing.JPanel();
        jspArticleScrollPane1 = new javax.swing.JScrollPane();
        lstAddressList = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAddressCustomerList = new javax.swing.JList<>();
        lblAddressCustomerWAddress = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnAddressSave = new javax.swing.JButton();
        btnAddressRevert = new javax.swing.JButton();
        btnAddressAdd = new javax.swing.JButton();
        btnAddressDelete = new javax.swing.JButton();
        cbAddressType = new javax.swing.JCheckBox();
        lblAddressCity = new javax.swing.JLabel();
        txtAddressCity = new javax.swing.JTextField();
        lblAddressCity1 = new javax.swing.JLabel();
        txtAddressZIP = new javax.swing.JTextField();
        lblAddressStreet = new javax.swing.JLabel();
        txtAddressStreet = new javax.swing.JTextField();
        lblAddressStreetNumber = new javax.swing.JLabel();
        txtAddressStreetNumber = new javax.swing.JTextField();
        lblAddressStreetLetter = new javax.swing.JLabel();
        txtAddressStreetLetter = new javax.swing.JTextField();
        lblAddressCountry = new javax.swing.JLabel();
        txtAddressCountry = new javax.swing.JTextField();
        lblAddressId = new javax.swing.JLabel();
        txtAddressId = new javax.swing.JTextField();
        btnAddressClear = new javax.swing.JButton();
        jpOptionsTab = new javax.swing.JPanel();
        databasePanel = new javax.swing.JPanel();
        databaseLabel = new javax.swing.JLabel();
        refreshDatabaseButton = new javax.swing.JButton();
        purgeDatabaseButton = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        lblTimeLabel = new javax.swing.JLabel();
        jmbFileInfoBar = new javax.swing.JMenuBar();
        jmFile = new javax.swing.JMenu();
        jmiExampleItem = new javax.swing.JMenuItem();
        jmInfo = new javax.swing.JMenu();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabController.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jpRegisterTab.setPreferredSize(new java.awt.Dimension(800, 500));

        customerTextArea.setEditable(false);
        customerTextArea.setColumns(20);
        customerTextArea.setRows(5);
        customerScrollPane.setViewportView(customerTextArea);

        addCustomerButton.setText("Add Customer");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        removeCustomerButton.setText("Remove");
        removeCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCustomerButtonActionPerformed(evt);
            }
        });

        shippingTextArea.setEditable(false);
        shippingTextArea.setColumns(20);
        shippingTextArea.setRows(5);
        shippingScrollPane.setViewportView(shippingTextArea);

        addCustomerButton1.setText("Add Shipping");
        addCustomerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButton1ActionPerformed(evt);
            }
        });

        removeCustomerButton1.setText("Remove");
        removeCustomerButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCustomerButton1ActionPerformed(evt);
            }
        });

        printInvoiceButton.setText("Print Invoice");
        printInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printInvoiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpRegisterTabLayout = new javax.swing.GroupLayout(jpRegisterTab);
        jpRegisterTab.setLayout(jpRegisterTabLayout);
        jpRegisterTabLayout.setHorizontalGroup(
            jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRegisterTabLayout.createSequentialGroup()
                .addGroup(jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpRegisterTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(customerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpRegisterTabLayout.createSequentialGroup()
                                .addComponent(addCustomerButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeCustomerButton)))
                        .addGap(35, 35, 35)
                        .addGroup(jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(shippingScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpRegisterTabLayout.createSequentialGroup()
                                .addComponent(addCustomerButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeCustomerButton1))))
                    .addGroup(jpRegisterTabLayout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(printInvoiceButton)))
                .addContainerGap(291, Short.MAX_VALUE))
        );
        jpRegisterTabLayout.setVerticalGroup(
            jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRegisterTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpRegisterTabLayout.createSequentialGroup()
                        .addComponent(customerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addCustomerButton)
                            .addComponent(removeCustomerButton)))
                    .addGroup(jpRegisterTabLayout.createSequentialGroup()
                        .addComponent(shippingScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpRegisterTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addCustomerButton1)
                            .addComponent(removeCustomerButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                .addComponent(printInvoiceButton)
                .addContainerGap())
        );

        tabController.addTab("Register", jpRegisterTab);

        javax.swing.GroupLayout invoicePanelLayout = new javax.swing.GroupLayout(invoicePanel);
        invoicePanel.setLayout(invoicePanelLayout);
        invoicePanelLayout.setHorizontalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        invoicePanelLayout.setVerticalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tpAccounting.addTab("Invoice", invoicePanel);

        customerPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                customerPanelComponentShown(evt);
            }
        });

        lstCustomerList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCustomerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCustomerListValueChanged(evt);
            }
        });
        jspCustomerScrollPane.setViewportView(lstCustomerList);

        lblCustomerIDLabel.setText("ID:");

        lblCustomerDateAddedLabel.setText("Date added:");

        lblCustomerNationalIDNumberLabel.setText("National ID number:");

        lblFirstNameLabel.setText("First name:");

        lblMiddleNameLabel.setText("Middle Name:");
        lblMiddleNameLabel.setPreferredSize(null);

        lblLastNameLabel.setText("Last Name:");
        lblLastNameLabel.setPreferredSize(null);

        lblCustomerNameLabel.setText("Name:");
        lblCustomerNameLabel.setPreferredSize(null);

        lblVATIDLabel.setText("VAT ID");
        lblVATIDLabel.setPreferredSize(null);

        lblCustomerTypeLabel.setText("Type:");
        lblCustomerTypeLabel.setPreferredSize(null);

        jcbCustomerTypeCheckBox.setText("Legal entity?");
        jcbCustomerTypeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCustomerTypeCheckBoxActionPerformed(evt);
            }
        });

        btnCustomerDeleteButton.setText("Delete");
        btnCustomerDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerDeleteButtonActionPerformed(evt);
            }
        });

        btnCustomerSaveButton.setText("Save");
        btnCustomerSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerSaveButtonActionPerformed(evt);
            }
        });

        btnCustomerRevertButton.setText("Revert");
        btnCustomerRevertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerRevertButtonActionPerformed(evt);
            }
        });

        txtCustomerID.setEditable(false);

        txtCustomerDateAdded.setEditable(false);

        lblCustomerAddress.setText("Address:");

        btnCustomerBillingAddress.setText("Billing address");
        btnCustomerBillingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerBillingAddressActionPerformed(evt);
            }
        });

        btnCustomerShippingAddress.setText("Shipping address");
        btnCustomerShippingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerShippingAddressActionPerformed(evt);
            }
        });

        btnCustomerAddCustomer.setText("Add");
        btnCustomerAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerAddCustomerActionPerformed(evt);
            }
        });

        btnCustomerClear.setText("Clear");
        btnCustomerClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustomerClearActionPerformed(evt);
            }
        });

        btnChangeCustomerBillingAddress.setText("Change / add");
        btnChangeCustomerBillingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeCustomerBillingAddressActionPerformed(evt);
            }
        });

        btnChangeCustomerShippingAddress.setText("Change / add");
        btnChangeCustomerShippingAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeCustomerShippingAddressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspCustomerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                        .addComponent(btnCustomerSaveButton)
                        .addGap(18, 18, 18)
                        .addComponent(btnCustomerRevertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCustomerClear)
                        .addGap(18, 18, 18)
                        .addComponent(btnCustomerAddCustomer)
                        .addGap(18, 18, 18)
                        .addComponent(btnCustomerDeleteButton))
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblCustomerNationalIDNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFirstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCustomerNationalIDNumber)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(customerPanelLayout.createSequentialGroup()
                                        .addComponent(txtCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblMiddleNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCustomerMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator1)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addComponent(lblCustomerIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(lblCustomerDateAddedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(txtCustomerDateAdded, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCustomerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblVATIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(104, 104, 104)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCustomerVATID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerLegalName)))
                    .addComponent(jSeparator2)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(lblCustomerTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(jcbCustomerTypeCheckBox))
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(lblCustomerAddress)
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnChangeCustomerBillingAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCustomerBillingAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCustomerShippingAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnChangeCustomerShippingAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        customerPanelLayout.setVerticalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCustomerIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCustomerDateAddedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCustomerDateAdded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCustomerNationalIDNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerNationalIDNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMiddleNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCustomerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerLegalName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVATIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerVATID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCustomerTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbCustomerTypeCheckBox))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCustomerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCustomerBillingAddress)
                            .addComponent(btnCustomerShippingAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChangeCustomerBillingAddress)
                            .addComponent(btnChangeCustomerShippingAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCustomerDeleteButton)
                            .addComponent(btnCustomerSaveButton)
                            .addComponent(btnCustomerRevertButton)
                            .addComponent(btnCustomerAddCustomer)
                            .addComponent(btnCustomerClear)))
                    .addComponent(jspCustomerScrollPane))
                .addContainerGap())
        );

        tpAccounting.addTab("Customer", customerPanel);

        articlePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                articlePanelComponentShown(evt);
            }
        });

        lstArticleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstArticleList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstArticleListValueChanged(evt);
            }
        });
        jspArticleScrollPane.setViewportView(lstArticleList);

        lblArticleIDLabel.setText("ID:");

        lblArticleShortNameLabel.setText("Short name:");

        lblArticleWarehouseLocationLabel.setText("Warehouse location:");

        lblArticleQuantityLabel.setText("Quantity:");

        lblArticleShortDescriptionLabel.setText("Short Description:");

        lblArticleShortDescriptionLabel1.setText("Long Description:");

        lblArticleLongNameLabel.setText("Long name:");

        txtArticleID.setEditable(false);

        txtArticleLongDescription.setColumns(20);
        txtArticleLongDescription.setRows(5);
        jScrollPane2.setViewportView(txtArticleLongDescription);

        lblArticleShortDescriptionLabel2.setText("Tax rate:");

        txtArticleTaxRate.setText("25");

        lblArticleShortDescriptionLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblArticleShortDescriptionLabel3.setText("%");
        lblArticleShortDescriptionLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblArticleShortDescriptionLabel4.setText("Wholesale price:");

        lblArticleShortDescriptionLabel5.setText("Retail price:");

        btnArticleSave.setText("Save");
        btnArticleSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleSaveActionPerformed(evt);
            }
        });

        btnArticleRevert.setText("Revert");
        btnArticleRevert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleRevertActionPerformed(evt);
            }
        });

        btnArticleAdd.setText("Add");
        btnArticleAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleAddActionPerformed(evt);
            }
        });

        btnArticleDelete.setText("Delete");
        btnArticleDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleDeleteActionPerformed(evt);
            }
        });

        btnArticleCalculateCost.setText("Calculate");
        btnArticleCalculateCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleCalculateCostActionPerformed(evt);
            }
        });

        btnArticleClear.setText("Clear");
        btnArticleClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArticleClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblArticleShortDescriptionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblArticleLongNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtArticleLongName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblArticleShortDescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtArticleShortDescription))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnArticleSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnArticleRevert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnArticleClear)
                        .addGap(18, 18, 18)
                        .addComponent(btnArticleAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnArticleDelete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblArticleShortDescriptionLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblArticleShortDescriptionLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtArticleRetailPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnArticleCalculateCost))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtArticleTaxRate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblArticleShortDescriptionLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblArticleShortDescriptionLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtArticleWholesalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 61, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblArticleIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtArticleID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblArticleQuantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtArticleWarehouseQuantity)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblArticleShortNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblArticleWarehouseLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtArticleShortName)
                            .addComponent(txtArticleWarehouseLocation))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleIDLabel)
                    .addComponent(txtArticleID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArticleShortNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtArticleShortName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleQuantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleWarehouseQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArticleWarehouseLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleWarehouseLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleLongNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleLongName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleShortDescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtArticleShortDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblArticleShortDescriptionLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                        .addGap(36, 36, 36))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleShortDescriptionLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleTaxRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArticleShortDescriptionLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArticleShortDescriptionLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleWholesalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblArticleShortDescriptionLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArticleRetailPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArticleCalculateCost))
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArticleDelete)
                    .addComponent(btnArticleSave)
                    .addComponent(btnArticleRevert)
                    .addComponent(btnArticleAdd)
                    .addComponent(btnArticleClear))
                .addContainerGap())
        );

        javax.swing.GroupLayout articlePanelLayout = new javax.swing.GroupLayout(articlePanel);
        articlePanel.setLayout(articlePanelLayout);
        articlePanelLayout.setHorizontalGroup(
            articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, articlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspArticleScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        articlePanelLayout.setVerticalGroup(
            articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, articlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(articlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspArticleScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tpAccounting.addTab("Article", articlePanel);

        addressPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                addressPanelComponentShown(evt);
            }
        });

        lstAddressList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstAddressList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAddressListValueChanged(evt);
            }
        });
        jspArticleScrollPane1.setViewportView(lstAddressList);

        lstAddressCustomerList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstAddressCustomerListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstAddressCustomerList);

        lblAddressCustomerWAddress.setText("Customer with selected address:");

        btnAddressSave.setText("Save");
        btnAddressSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressSaveActionPerformed(evt);
            }
        });

        btnAddressRevert.setText("Revert");
        btnAddressRevert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressRevertActionPerformed(evt);
            }
        });

        btnAddressAdd.setText("Add");
        btnAddressAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressAddActionPerformed(evt);
            }
        });

        btnAddressDelete.setText("Delete");
        btnAddressDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressDeleteActionPerformed(evt);
            }
        });

        cbAddressType.setText("Billing address?");
        cbAddressType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        lblAddressCity.setText("City:");

        lblAddressCity1.setText("ZIP:");

        lblAddressStreet.setText("Street:");

        lblAddressStreetNumber.setText("Street number:");

        lblAddressStreetLetter.setText("Street letter:");

        lblAddressCountry.setText("Country:");

        lblAddressId.setText("ID:");

        txtAddressId.setEditable(false);

        btnAddressClear.setText("Clear");
        btnAddressClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAddressSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddressRevert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddressClear)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddressAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddressDelete))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblAddressStreetLetter)
                                .addGap(18, 18, 18)
                                .addComponent(txtAddressStreetLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblAddressCountry)
                                .addGap(18, 18, 18)
                                .addComponent(txtAddressCountry))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(lblAddressStreet)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtAddressStreet))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(lblAddressCity)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(cbAddressType, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblAddressId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtAddressId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblAddressCity1)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtAddressZIP, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblAddressStreetNumber)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtAddressStreetNumber)))))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAddressId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAddressId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbAddressType, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressZIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressStreetNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressStreetNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressStreetLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressStreetLetter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddressDelete)
                    .addComponent(btnAddressSave)
                    .addComponent(btnAddressRevert)
                    .addComponent(btnAddressAdd)
                    .addComponent(btnAddressClear))
                .addContainerGap())
        );

        javax.swing.GroupLayout addressPanelLayout = new javax.swing.GroupLayout(addressPanel);
        addressPanel.setLayout(addressPanelLayout);
        addressPanelLayout.setHorizontalGroup(
            addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspArticleScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressCustomerWAddress))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        addressPanelLayout.setVerticalGroup(
            addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addressPanelLayout.createSequentialGroup()
                        .addComponent(jspArticleScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAddressCustomerWAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tpAccounting.addTab("Address", addressPanel);

        javax.swing.GroupLayout jpAccountingTabLayout = new javax.swing.GroupLayout(jpAccountingTab);
        jpAccountingTab.setLayout(jpAccountingTabLayout);
        jpAccountingTabLayout.setHorizontalGroup(
            jpAccountingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpAccounting)
        );
        jpAccountingTabLayout.setVerticalGroup(
            jpAccountingTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpAccounting)
        );

        tabController.addTab("Accounting", jpAccountingTab);

        databasePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        databaseLabel.setText("Database");

        refreshDatabaseButton.setText("Refresh database");

        purgeDatabaseButton.setText("Purge database");
        purgeDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purgeDatabaseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout databasePanelLayout = new javax.swing.GroupLayout(databasePanel);
        databasePanel.setLayout(databasePanelLayout);
        databasePanelLayout.setHorizontalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(databaseLabel)
                    .addComponent(refreshDatabaseButton)
                    .addComponent(purgeDatabaseButton))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        databasePanelLayout.setVerticalGroup(
            databasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(databasePanelLayout.createSequentialGroup()
                .addComponent(databaseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshDatabaseButton)
                .addGap(18, 18, 18)
                .addComponent(purgeDatabaseButton)
                .addGap(0, 130, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpOptionsTabLayout = new javax.swing.GroupLayout(jpOptionsTab);
        jpOptionsTab.setLayout(jpOptionsTabLayout);
        jpOptionsTabLayout.setHorizontalGroup(
            jpOptionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOptionsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(databasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(568, Short.MAX_VALUE))
        );
        jpOptionsTabLayout.setVerticalGroup(
            jpOptionsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOptionsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(databasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(279, Short.MAX_VALUE))
        );

        tabController.addTab("Options", jpOptionsTab);

        jToolBar1.setRollover(true);

        lblTimeLabel.setText("time");
        jToolBar1.add(lblTimeLabel);

        jmFile.setText("File");

        jmiExampleItem.setText("Example");
        jmFile.add(jmiExampleItem);

        jmbFileInfoBar.add(jmFile);

        jmInfo.setText("Info");
        jmInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmInfoMouseClicked(evt);
            }
        });
        jmbFileInfoBar.add(jmInfo);

        setJMenuBar(jmbFileInfoBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabController)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabController, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void removeCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCustomerButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeCustomerButtonActionPerformed

    private void addCustomerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomerButton1ActionPerformed

    private void removeCustomerButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCustomerButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeCustomerButton1ActionPerformed

    private void printInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printInvoiceButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printInvoiceButtonActionPerformed

    private void purgeDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purgeDatabaseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purgeDatabaseButtonActionPerformed

    private void jmInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmInfoMouseClicked
        Date date = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("YYYY");
        JOptionPane.showMessageDialog(rootPane, "This program has been made by Tomislav Nebes.\n2020 - " + simpleDateFormat.format(date));
    }//GEN-LAST:event_jmInfoMouseClicked

    private void btnArticleDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnArticleDeleteActionPerformed

    private void btnArticleAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleAddActionPerformed
        saveNewArticle();
    }//GEN-LAST:event_btnArticleAddActionPerformed

    private void btnArticleRevertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleRevertActionPerformed
        if (!somethingSelectedInList(lstArticleList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to revert changes made to this article?",
                "Revert Check",
                JOptionPane.YES_NO_OPTION) == 0) {
            Article article = lstArticleList.getSelectedValue();
            if (article == null) {
                return;
            }
            updateArticleInformation(article);
        }
    }//GEN-LAST:event_btnArticleRevertActionPerformed

    private boolean somethingSelectedInList(Object selectedValue) {
        return selectedValue != null;
    }

    private void btnArticleSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleSaveActionPerformed
        if (!somethingSelectedInList(lstArticleList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to make changes to this article?",
                "Save Check",
                JOptionPane.YES_NO_OPTION) == 0) {
            Article article = lstArticleList.getSelectedValue();
            updateArticle(article);
        }
    }//GEN-LAST:event_btnArticleSaveActionPerformed

    private void lstArticleListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstArticleListValueChanged
        // avoids null values
        if (evt.getValueIsAdjusting()) {
            return;
        }
        
        Article article = lstArticleList.getSelectedValue();
        if (article == null) {
            return;
        }
        
        updateArticleInformation(article);
    }//GEN-LAST:event_lstArticleListValueChanged

    private void btnCustomerAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerAddCustomerActionPerformed
        saveNewCustomer();
    }//GEN-LAST:event_btnCustomerAddCustomerActionPerformed

    private void btnCustomerShippingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerShippingAddressActionPerformed
        Customer customer = lstCustomerList.getSelectedValue();
        if (customer == null) {
            JOptionPane.showInternalMessageDialog(null, "No customer selected.");
            return;
        }
        if (customer.getShippingAddress() == null) {
            JOptionPane.showInternalMessageDialog(null, "Customer has no shipping address.");
            return;
        }
        try {
            // Address address = new CustomerHandler(customer).getShippingAddressOfCustomer();
            customerHandler.setEntity(customer);
            Address address = customerHandler.getShippingAddressOfCustomer();
            gotoAddress(address);
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCustomerShippingAddressActionPerformed

    private void btnCustomerBillingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerBillingAddressActionPerformed
        Customer customer = lstCustomerList.getSelectedValue();
        if (customer == null) {
            JOptionPane.showInternalMessageDialog(null, "No customer selected.");
            return;
        }
        if (customer.getBillingAddress() == null) {
            JOptionPane.showInternalMessageDialog(null, "Customer has no billing address.");
            return;
        }
        try {
            //Address address = new CustomerHandler(customer).getBillingAddressOfCustomer();
            customerHandler.setEntity(customer);
            Address address = customerHandler.getBillingAddressOfCustomer();
            gotoAddress(address);
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_btnCustomerBillingAddressActionPerformed

    private void btnCustomerRevertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerRevertButtonActionPerformed
        if (!somethingSelectedInList(lstCustomerList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to revert changes made to this customer?",
                "Revert Check",
                JOptionPane.YES_NO_OPTION) == 0) {
            Customer customer = lstCustomerList.getSelectedValue();
            if (customer == null) {
                return;
            }
            updateCustomerInformation(customer);
        }
    }//GEN-LAST:event_btnCustomerRevertButtonActionPerformed

    private void btnCustomerSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerSaveButtonActionPerformed
        if (!somethingSelectedInList(lstCustomerList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to make changes to this customer?",
                "Save Check",
                JOptionPane.YES_NO_OPTION) == 0) {
            Customer customer = lstCustomerList.getSelectedValue();
            updateCustomer(customer);
        }
    }//GEN-LAST:event_btnCustomerSaveButtonActionPerformed

    private void btnCustomerDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerDeleteButtonActionPerformed
        if (!somethingSelectedInList(lstCustomerList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to delete this customer?",
                "Save Check",
                JOptionPane.YES_NO_OPTION) == 0) {
            Customer customer = lstCustomerList.getSelectedValue();
            deleteCustomer(customer);
        }
    }//GEN-LAST:event_btnCustomerDeleteButtonActionPerformed

    private void jcbCustomerTypeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCustomerTypeCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCustomerTypeCheckBoxActionPerformed

    private void lstCustomerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCustomerListValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        Customer customer = lstCustomerList.getSelectedValue();
        if (customer == null) {
            return;
        }
        updateCustomerInformation(customer);
    }//GEN-LAST:event_lstCustomerListValueChanged

    private void lstAddressListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAddressListValueChanged
        // TODO what does this do?
        if (evt.getValueIsAdjusting()) {
            return;
        }

        Address address = lstAddressList.getSelectedValue();
        if (address == null) {
            return;
        }

        updateAddressInformation(address);

    }//GEN-LAST:event_lstAddressListValueChanged

    private void customerPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_customerPanelComponentShown
        loadCustomers();
    }//GEN-LAST:event_customerPanelComponentShown

    private void articlePanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_articlePanelComponentShown
        loadArticles();
    }//GEN-LAST:event_articlePanelComponentShown

    private void addressPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_addressPanelComponentShown
        loadAddresses();
    }//GEN-LAST:event_addressPanelComponentShown

    private void btnAddressSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressSaveActionPerformed
        if (!somethingSelectedInList(lstAddressList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to make changes to this address?",
                "Save Check",
                JOptionPane.YES_NO_OPTION) == 0) {
            Address address = lstAddressList.getSelectedValue();
            updateAddress(address);
        }

    }//GEN-LAST:event_btnAddressSaveActionPerformed

    private void btnAddressRevertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressRevertActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddressRevertActionPerformed

    private void btnAddressAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressAddActionPerformed
        saveNewAddress();
    }//GEN-LAST:event_btnAddressAddActionPerformed


    private void btnAddressDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressDeleteActionPerformed
        if (!somethingSelectedInList(lstAddressList.getSelectedValue())) {
            JOptionPane.showMessageDialog(rootPane, "Something must be selected from the list.");
            return;
        }
        if (JOptionPane.showConfirmDialog(null,
                "Are you sure you wish to delete this address?",
                "Save Check",
                JOptionPane.YES_NO_OPTION) == 0) {
            Address address = lstAddressList.getSelectedValue();
            deleteAddress(address);
        }
    }//GEN-LAST:event_btnAddressDeleteActionPerformed

    private void lstAddressCustomerListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstAddressCustomerListMouseClicked
        if (evt.getClickCount() == 2) {
            gotoCustomer(lstAddressCustomerList.getSelectedValue());
        }
    }//GEN-LAST:event_lstAddressCustomerListMouseClicked

    private void btnArticleCalculateCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleCalculateCostActionPerformed
        calculateArticlePriceDetails();

    }//GEN-LAST:event_btnArticleCalculateCostActionPerformed

    private void btnAddressClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressClearActionPerformed
        clearAddressInformation();
        lstAddressList.clearSelection();
    }//GEN-LAST:event_btnAddressClearActionPerformed

    private void btnArticleClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArticleClearActionPerformed
        clearArticleInformation();
        lstArticleList.clearSelection();
    }//GEN-LAST:event_btnArticleClearActionPerformed

    private void btnCustomerClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerClearActionPerformed
        clearCustomerInformation();
    }//GEN-LAST:event_btnCustomerClearActionPerformed

    private void btnChangeCustomerBillingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeCustomerBillingAddressActionPerformed
        if (lstCustomerList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "No customer selected.");
            return;
        }
        customerChangeAddAddress(true); // billing
    }//GEN-LAST:event_btnChangeCustomerBillingAddressActionPerformed

    private void btnChangeCustomerShippingAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeCustomerShippingAddressActionPerformed
        if (lstCustomerList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(rootPane, "No customer selected.");
            return;
        }
        customerChangeAddAddress(false); // shipping
    }//GEN-LAST:event_btnChangeCustomerShippingAddressActionPerformed

    /* Customer Panel */
    /* ************** */
    
    private void loadCustomers() {
        DefaultListModel<Customer> customers = new DefaultListModel<>();
        try {
            customers.addAll(customerHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }  
        lstCustomerList.setModel(customers);
    }
        
    private void clearCustomerInformation() {
        txtCustomerID.setText("");
        txtCustomerDateAdded.setText("");
        txtCustomerNationalIDNumber.setText("");
        jcbCustomerTypeCheckBox.setSelected(false);
        txtCustomerFirstName.setText("");
        txtCustomerMiddleName.setText("");
        txtCustomerLastName.setText("");
        txtCustomerLegalName.setText("");
        txtCustomerVATID.setText("");
    }

    private void updateCustomerInformation(Customer customer) {
        clearCustomerInformation();
        // FIXME a really bad workaround
        txtCustomerID.setText("" + customer.getId());
        txtCustomerDateAdded.setText(customer.getDateOfCreation().toString());
        txtCustomerNationalIDNumber.setText(customer.getNationalIdNumber());
        jcbCustomerTypeCheckBox.setSelected(customer.isType());
        if (customer.isType() == Customer.NATURAL_PERSON) {
            txtCustomerFirstName.setText(customer.getFirstName());
            txtCustomerMiddleName.setText(customer.getMiddleName());
            txtCustomerLastName.setText(customer.getLastName());
        } else {
            txtCustomerLegalName.setText(customer.getName());
            txtCustomerVATID.setText(customer.getVATID());
        }
    }

    private void selectCustomer(Customer customer) {
        lstCustomerList.grabFocus();
        lstCustomerList.clearSelection();
        lstCustomerList.setSelectedValue(customer, true);
        updateCustomerInformation(lstCustomerList.getSelectedValue());
    }

    private void gotoAddress(Address address) {
        tpAccounting.setSelectedIndex(3); // go to addresses tab
        selectAddress(address);
    }

    private void updateCustomer(Customer customer) {
        collectCustomerInformation(customer);
        try {
            customerHandler.setEntity(customer);
            customerHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void collectCustomerInformation(Customer customer) {
        customer.setType(jcbCustomerTypeCheckBox.isSelected());
        if (customer.isType() == Customer.NATURAL_PERSON) {
            customer.setFirstName(txtCustomerFirstName.getText());
            customer.setMiddleName(txtCustomerMiddleName.getText());
            customer.setLastName(txtCustomerLastName.getText());
            customer.setNationalIdNumber(txtCustomerNationalIDNumber.getText());
        } else {
            customer.setName(txtCustomerLegalName.getText());
            customer.setVATID(txtCustomerVATID.getText());
        }
        // TODO add update for billing and shipping address.
    }

    private void deleteCustomer(Customer customer) {
        customerHandler.setEntity(customer);
        try {
            customerHandler.delete();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void saveNewCustomer() {
        Customer newCustomer = new Customer();
        collectCustomerInformation(newCustomer);
        newCustomer.setDateOfCreation(Instant.now());
        AddressPicker addressPicker = new AddressPicker(this, false);
        addressPicker.setVisible(true);
        addressPicker.giveMeAddress(newAddress -> {
            try {
                newCustomer.setBillingAddress(newAddress);
                customerHandler.setEntity(newCustomer);
                customerHandler.create();
                loadCustomers();
            } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
            }
        });
    }

    private void customerChangeAddAddress(boolean addressType) {
        new AddressPicker(this, addressType).setVisible(true);
    }

    public void customerSetAddress(Address newAddress, boolean addressType) {
        Customer customer = lstCustomerList.getSelectedValue();
        if (addressType) { // billing
            customer.setBillingAddress(newAddress);
        } else {
            customer.setShippingAddress(newAddress);
        }
        customerHandler.setEntity(customer);
        try {
            customerHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }


    /* ************** */
    
    /* Article Panel */
    /* ************* */
    
    private void loadArticles() {
        DefaultListModel<Article> articles = new DefaultListModel<>();
        try {
            articles.addAll(articleHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }  
        lstArticleList.setModel(articles);
    }
    
    private void updateArticleInformation(Article article) {
        clearArticleInformation();
        txtArticleID.setText(article.getId().toString());
        txtArticleShortName.setText(article.getShortName());
        txtArticleWarehouseQuantity.setText(article.getWarehouseQuantity().toString());
        txtArticleWarehouseLocation.setText(article.getWarehouseLocation());
        txtArticleLongName.setText(article.getLongName());
        txtArticleShortDescription.setText(article.getShortDescription());
        txtArticleLongDescription.setText(article.getLongDescription());
        txtArticleTaxRate.setText(article.getTaxRate().toString());
        txtArticleWholesalePrice.setText(article.getWholesalePrice().toString());
        txtArticleRetailPrice.setText(article.getRetailPrice().toString());
    }
    
    private void clearArticleInformation() {
        txtArticleID.setText("");
        txtArticleShortName.setText("");
        txtArticleWarehouseQuantity.setText("");
        txtArticleWarehouseLocation.setText("");
        txtArticleLongName.setText("");
        txtArticleShortDescription.setText("");
        txtArticleLongDescription.setText("");
        txtArticleTaxRate.setText(Article.STANDARD_TAX_RATE + "");
        txtArticleWholesalePrice.setText("");
        txtArticleRetailPrice.setText("");
    }

    private void updateArticle(Article article) {
        collectArticleInformation(article);
        try {
            articleHandler.setEntity(article);
            articleHandler.update();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void collectArticleInformation(Article article) {
        article.setLongDescription(txtArticleLongDescription.getText());
        article.setLongName(txtArticleLongName.getText());
        article.setTaxRate(new BigDecimal(txtArticleTaxRate.getText()));
        article.setWholesalePrice(new BigDecimal(txtArticleWholesalePrice.getText()));
        article.setRetailPrice(new BigDecimal(txtArticleRetailPrice.getText()));
        article.setShortDescription(txtArticleShortDescription.getText());
        article.setShortName(txtArticleShortName.getText());
        article.setWarehouseLocation(txtArticleWarehouseLocation.getText());
        article.setWarehouseQuantity(Long.parseLong(txtArticleWarehouseQuantity.getText()));
    }

    private void calculateArticlePriceDetails() {
        List<JTextField> textFieldList = new ArrayList<>();
        textFieldList.add(txtArticleRetailPrice);
        textFieldList.add(txtArticleWholesalePrice);
        textFieldList.add(txtArticleTaxRate);
        int counter = 0;
        for (JTextField textField : textFieldList) {
            if (textField.getText().isBlank()) {
                counter++;
            }
        }
        String message;
        switch (counter) {
            case 0 : message = "At least one field must be empty in order to calculate price details.";
                break;
            case 2 :
            case 3 :
                message = "At least two fields must be filled in to be able to calculate price details";
                break;
            default: message = "";
        }
        if (!message.isBlank()) {
            JOptionPane.showMessageDialog(rootPane, message);
            return;
        }

        if (txtArticleRetailPrice.getText().isBlank()) {
            calculateArticleRetailPrice();
            return;
        }
        if (txtArticleWholesalePrice.getText().isBlank()) {
            calculateArticleWholesalePrice();
            return;
        }
        if (txtArticleTaxRate.getText().isBlank()) {
            calculateArticleTaxRate();
            return;
        }
    }

    private void calculateArticleRetailPrice() {
        BigDecimal retailPrice;
        BigDecimal articleWholesalePrice = new BigDecimal(txtArticleWholesalePrice.getText());
        BigDecimal articleTaxRate = new BigDecimal(txtArticleTaxRate.getText()).divide(BigDecimal.valueOf(100), 2, RoundingMode.HALF_UP);
        retailPrice = articleWholesalePrice
                .multiply(articleTaxRate.add(BigDecimal.ONE))
                .setScale(2, RoundingMode.HALF_UP);
        txtArticleRetailPrice.setText(retailPrice.toString());
    }

    private void calculateArticleTaxRate() {
        BigDecimal taxRate;
        BigDecimal articleRetailPrice = new BigDecimal(txtArticleRetailPrice.getText());
        BigDecimal articleWholesalePrice = new BigDecimal(txtArticleWholesalePrice.getText());
        taxRate = articleRetailPrice.subtract(articleWholesalePrice).divide(articleWholesalePrice, 2, RoundingMode.HALF_UP).multiply(BigDecimal.valueOf(100));
        txtArticleTaxRate.setText(taxRate.toString());
    }

    private void calculateArticleWholesalePrice() {
        BigDecimal wholesalePrice;
        BigDecimal articleRetailPrice = new BigDecimal(txtArticleRetailPrice.getText());
        BigDecimal articleTaxRate = new BigDecimal(txtArticleTaxRate.getText()).divide(BigDecimal.valueOf(100), 2, RoundingMode.HALF_UP);
        wholesalePrice = articleRetailPrice.divide(articleTaxRate.add(BigDecimal.ONE), 2, RoundingMode.HALF_UP);
        txtArticleWholesalePrice.setText(wholesalePrice.toString());
    }

    private void saveNewArticle() {
        Article newArticle = new Article();
        collectArticleInformation(newArticle);
        try {
            articleHandler.setEntity(newArticle);
            articleHandler.create();
            loadArticles();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    /* ************* */
    
    /* Address Panel */
    /* ************** */

    private void loadAddresses() {
        DefaultListModel<Address> addresses = new DefaultListModel<>();
        try {
            addresses.addAll(addressHandler.getData());
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstAddressList.setModel(addresses);
    }

    private void updateAddressInformation(Address address) {
        clearAddressInformation();
        clearAddressCustomerInformation();
        cbAddressType.setSelected(address.isType());
        txtAddressId.setText(address.getId().toString());
        txtAddressCity.setText(address.getCity());
        txtAddressZIP.setText(address.getZIPCode());
        txtAddressStreet.setText(address.getStreet());
        txtAddressStreetNumber.setText(address.getStreetNumber());
        txtAddressStreetLetter.setText(address.getStreetLetter());
        txtAddressCountry.setText(address.getCountry());
        updateAddressCustomerList(address);
    }
    
    private void updateAddressCustomerList(Address address) {
        DefaultListModel<Customer> customers = new DefaultListModel<>();
        try {
            customers.addAll(customerHandler.getCustomersWithAddress(address));
        }catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
        lstAddressCustomerList.setModel(customers);
    }
    
    private void clearAddressInformation() {
        cbAddressType.setSelected(false);
        txtAddressId.setText("");
        txtAddressCity.setText("");
        txtAddressZIP.setText("");
        txtAddressStreet.setText("");
        txtAddressStreetNumber.setText("");
        txtAddressStreetLetter.setText("");
        txtAddressCountry.setText("");
    }

    private void clearAddressCustomerInformation() {
        lstAddressCustomerList.setModel(new DefaultListModel<>());
    }
    
    private void gotoCustomer(Customer customer) {
        tpAccounting.setSelectedIndex(1); // goes to customer tab
        selectCustomer(customer);
    }

    private void selectAddress(Address address) {
        lstAddressList.grabFocus();
        lstAddressList.clearSelection();
        lstAddressList.setSelectedValue(address, true);
        updateAddressInformation(lstAddressList.getSelectedValue());
    }

    private void updateAddress(Address address) {
        collectAddressInformation(address);
        try {
            addressHandler.setEntity(address);
            addressHandler.update();
            loadAddresses();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void collectAddressInformation(Address address) {
        address.setType(cbAddressType.isSelected());
        address.setCity(txtAddressCity.getText());
        address.setZIPCode(txtAddressZIP.getText());
        address.setStreet(txtAddressStreet.getText());
        address.setStreetNumber(txtAddressStreetNumber.getText());
        address.setStreetLetter(txtAddressStreetLetter.getText());
        address.setCountry(txtAddressCountry.getText());
    }

    private void deleteAddress(Address address) {
        addressHandler.setEntity(address);
        try {
            addressHandler.delete();
            loadAddresses();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    private void saveNewAddress() {
        Address newAddress = new Address();
        collectAddressInformation(newAddress);
        addressHandler.setEntity(newAddress);
        if (!genericSaveCheck("address")) {
            return;
        }
        try {
            addressHandler.create();
            clearAddressInformation();
            loadAddresses();
        } catch (InvoiceGeneratorException e) {
            e.printStackTrace();
        }
    }

    /* ************** */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JButton addCustomerButton1;
    private javax.swing.JPanel addressPanel;
    private javax.swing.JPanel articlePanel;
    private javax.swing.JButton btnAddressAdd;
    private javax.swing.JButton btnAddressClear;
    private javax.swing.JButton btnAddressDelete;
    private javax.swing.JButton btnAddressRevert;
    private javax.swing.JButton btnAddressSave;
    private javax.swing.JButton btnArticleAdd;
    private javax.swing.JButton btnArticleCalculateCost;
    private javax.swing.JButton btnArticleClear;
    private javax.swing.JButton btnArticleDelete;
    private javax.swing.JButton btnArticleRevert;
    private javax.swing.JButton btnArticleSave;
    private javax.swing.JButton btnChangeCustomerBillingAddress;
    private javax.swing.JButton btnChangeCustomerShippingAddress;
    private javax.swing.JButton btnCustomerAddCustomer;
    private javax.swing.JButton btnCustomerBillingAddress;
    private javax.swing.JButton btnCustomerClear;
    private javax.swing.JButton btnCustomerDeleteButton;
    private javax.swing.JButton btnCustomerRevertButton;
    private javax.swing.JButton btnCustomerSaveButton;
    private javax.swing.JButton btnCustomerShippingAddress;
    private javax.swing.JCheckBox cbAddressType;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JScrollPane customerScrollPane;
    private javax.swing.JTextArea customerTextArea;
    private javax.swing.JLabel databaseLabel;
    private javax.swing.JPanel databasePanel;
    private javax.swing.JPanel invoicePanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JCheckBox jcbCustomerTypeCheckBox;
    private javax.swing.JMenu jmFile;
    private javax.swing.JMenu jmInfo;
    private javax.swing.JMenuBar jmbFileInfoBar;
    private javax.swing.JMenuItem jmiExampleItem;
    private javax.swing.JPanel jpAccountingTab;
    private javax.swing.JPanel jpOptionsTab;
    private javax.swing.JPanel jpRegisterTab;
    private javax.swing.JScrollPane jspArticleScrollPane;
    private javax.swing.JScrollPane jspArticleScrollPane1;
    private javax.swing.JScrollPane jspCustomerScrollPane;
    private javax.swing.JLabel lblAddressCity;
    private javax.swing.JLabel lblAddressCity1;
    private javax.swing.JLabel lblAddressCountry;
    private javax.swing.JLabel lblAddressCustomerWAddress;
    private javax.swing.JLabel lblAddressId;
    private javax.swing.JLabel lblAddressStreet;
    private javax.swing.JLabel lblAddressStreetLetter;
    private javax.swing.JLabel lblAddressStreetNumber;
    private javax.swing.JLabel lblArticleIDLabel;
    private javax.swing.JLabel lblArticleLongNameLabel;
    private javax.swing.JLabel lblArticleQuantityLabel;
    private javax.swing.JLabel lblArticleShortDescriptionLabel;
    private javax.swing.JLabel lblArticleShortDescriptionLabel1;
    private javax.swing.JLabel lblArticleShortDescriptionLabel2;
    private javax.swing.JLabel lblArticleShortDescriptionLabel3;
    private javax.swing.JLabel lblArticleShortDescriptionLabel4;
    private javax.swing.JLabel lblArticleShortDescriptionLabel5;
    private javax.swing.JLabel lblArticleShortNameLabel;
    private javax.swing.JLabel lblArticleWarehouseLocationLabel;
    private javax.swing.JLabel lblCustomerAddress;
    private javax.swing.JLabel lblCustomerDateAddedLabel;
    private javax.swing.JLabel lblCustomerIDLabel;
    private javax.swing.JLabel lblCustomerNameLabel;
    private javax.swing.JLabel lblCustomerNationalIDNumberLabel;
    private javax.swing.JLabel lblCustomerTypeLabel;
    private javax.swing.JLabel lblFirstNameLabel;
    private javax.swing.JLabel lblLastNameLabel;
    private javax.swing.JLabel lblMiddleNameLabel;
    private javax.swing.JLabel lblTimeLabel;
    private javax.swing.JLabel lblVATIDLabel;
    private javax.swing.JList<Customer> lstAddressCustomerList;
    private javax.swing.JList<Address> lstAddressList;
    private javax.swing.JList<Article> lstArticleList;
    private javax.swing.JList<Customer> lstCustomerList;
    private javax.swing.JButton printInvoiceButton;
    private javax.swing.JButton purgeDatabaseButton;
    private javax.swing.JButton refreshDatabaseButton;
    private javax.swing.JButton removeCustomerButton;
    private javax.swing.JButton removeCustomerButton1;
    private javax.swing.JScrollPane shippingScrollPane;
    private javax.swing.JTextArea shippingTextArea;
    private javax.swing.JTabbedPane tabController;
    private javax.swing.JTabbedPane tpAccounting;
    private javax.swing.JTextField txtAddressCity;
    private javax.swing.JTextField txtAddressCountry;
    private javax.swing.JTextField txtAddressId;
    private javax.swing.JTextField txtAddressStreet;
    private javax.swing.JTextField txtAddressStreetLetter;
    private javax.swing.JTextField txtAddressStreetNumber;
    private javax.swing.JTextField txtAddressZIP;
    private javax.swing.JTextField txtArticleID;
    private javax.swing.JTextArea txtArticleLongDescription;
    private javax.swing.JTextField txtArticleLongName;
    private javax.swing.JTextField txtArticleRetailPrice;
    private javax.swing.JTextField txtArticleShortDescription;
    private javax.swing.JTextField txtArticleShortName;
    private javax.swing.JTextField txtArticleTaxRate;
    private javax.swing.JTextField txtArticleWarehouseLocation;
    private javax.swing.JTextField txtArticleWarehouseQuantity;
    private javax.swing.JTextField txtArticleWholesalePrice;
    private javax.swing.JTextField txtCustomerDateAdded;
    private javax.swing.JTextField txtCustomerFirstName;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtCustomerLastName;
    private javax.swing.JTextField txtCustomerLegalName;
    private javax.swing.JTextField txtCustomerMiddleName;
    private javax.swing.JTextField txtCustomerNationalIDNumber;
    private javax.swing.JTextField txtCustomerVATID;
    // End of variables declaration//GEN-END:variables
}
